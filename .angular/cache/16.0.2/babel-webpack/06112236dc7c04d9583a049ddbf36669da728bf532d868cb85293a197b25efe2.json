{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass EtablissementService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8082/etablissements'; // Replace with the actual API URL\n  }\n\n  getEtablissements() {\n    return this.http.get(this.baseUrl);\n  }\n  getEtablissementById(etablissementId) {\n    const url = `${this.baseUrl}/${etablissementId}`;\n    return this.http.get(url);\n  }\n  createEtablissement(etablissement) {\n    return this.http.post(this.baseUrl, etablissement);\n  }\n  updateEtablissement(etablissement) {\n    const url = `${this.baseUrl}/${etablissement.id}`;\n    return this.http.put(url, etablissement);\n  }\n  deleteEtablissement(etablissementId) {\n    const url = `${this.baseUrl}/${etablissementId}`;\n    return this.http.delete(url);\n  }\n}\nEtablissementService.ɵfac = function EtablissementService_Factory(t) {\n  return new (t || EtablissementService)(i0.ɵɵinject(i1.HttpClient));\n};\nEtablissementService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EtablissementService,\n  factory: EtablissementService.ɵfac,\n  providedIn: 'root'\n});\nexport { EtablissementService };","map":{"version":3,"names":["EtablissementService","constructor","http","baseUrl","getEtablissements","get","getEtablissementById","etablissementId","url","createEtablissement","etablissement","post","updateEtablissement","id","put","deleteEtablissement","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Asus ROG\\Documents\\GitHub\\GestionLabo\\src\\app\\services\\etablissement\\etablissement.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { IEtablissement } from '../../models/IEtablissement';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EtablissementService {\r\n  private baseUrl = 'http://localhost:8082/etablissements'; // Replace with the actual API URL\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getEtablissements(): Observable<IEtablissement[]> {\r\n    return this.http.get<IEtablissement[]>(this.baseUrl);\r\n  }\r\n\r\n  getEtablissementById(etablissementId: number): Observable<IEtablissement> {\r\n    const url = `${this.baseUrl}/${etablissementId}`;\r\n    return this.http.get<IEtablissement>(url);\r\n  }\r\n\r\n  createEtablissement(etablissement: IEtablissement): Observable<any> {\r\n    return this.http.post(this.baseUrl, etablissement);\r\n  }\r\n\r\n  updateEtablissement(etablissement: IEtablissement): Observable<any> {\r\n    const url = `${this.baseUrl}/${etablissement.id}`;\r\n    return this.http.put(url, etablissement);\r\n  }\r\n\r\n  deleteEtablissement(etablissementId: number): Observable<any> {\r\n    const url = `${this.baseUrl}/${etablissementId}`;\r\n    return this.http.delete(url);\r\n  }\r\n}\r\n"],"mappings":";;AAKA,MAGaA,oBAAoB;EAG/BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,sCAAsC,CAAC,CAAC;EAElB;;EAExCC,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAmB,IAAI,CAACF,OAAO,CAAC;EACtD;EAEAG,oBAAoBA,CAACC,eAAuB;IAC1C,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACL,OAAO,IAAII,eAAe,EAAE;IAChD,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAiBG,GAAG,CAAC;EAC3C;EAEAC,mBAAmBA,CAACC,aAA6B;IAC/C,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC,IAAI,CAACR,OAAO,EAAEO,aAAa,CAAC;EACpD;EAEAE,mBAAmBA,CAACF,aAA6B;IAC/C,MAAMF,GAAG,GAAG,GAAG,IAAI,CAACL,OAAO,IAAIO,aAAa,CAACG,EAAE,EAAE;IACjD,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAACN,GAAG,EAAEE,aAAa,CAAC;EAC1C;EAEAK,mBAAmBA,CAACR,eAAuB;IACzC,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACL,OAAO,IAAII,eAAe,EAAE;IAChD,OAAO,IAAI,CAACL,IAAI,CAACc,MAAM,CAACR,GAAG,CAAC;EAC9B;;AA1BWR,oBAAoB,C;mBAApBA,oBAAoB,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAApBpB,oBAAoB,C;SAApBA,oBAAoB;EAAAqB,OAAA,EAApBrB,oBAAoB,CAAAsB,IAAA;EAAAC,UAAA,EAFnB;AAAM;SAEPvB,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}