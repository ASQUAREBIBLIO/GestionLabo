{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/projet/projet.service\";\nclass ProjetComponent {\n  constructor(projetService) {\n    this.projetService = projetService;\n    this.projets = [];\n  }\n  ngOnInit() {\n    this.loadProjets();\n  }\n  loadProjets() {\n    this.projetService.getAllProjets.subscribe(projets => this.projets = projets, error => console.log(error));\n  }\n  createProjet(projet) {\n    this.projetService.createProjet(projet).subscribe(response => {\n      console.log('Projet created successfully.');\n      // Refresh projets list\n      this.loadProjets();\n    }, error => console.log(error));\n  }\n  updateProjet(projetId, projet) {\n    this.projetService.updateProjet(projetId, projet).subscribe(response => {\n      console.log('Etablissement updated successfully.');\n      // Refresh projets list\n      this.loadProjets();\n    }, error => console.log(error));\n  }\n  deleteProjet(projetId) {\n    this.projetService.deleteProjet(projetId).subscribe(response => {\n      console.log('Projet deleted successfully.');\n      // Refresh projets list\n      this.loadProjets();\n    }, error => console.log(error));\n  }\n}\nProjetComponent.ɵfac = function ProjetComponent_Factory(t) {\n  return new (t || ProjetComponent)(i0.ɵɵdirectiveInject(i1.ProjetService));\n};\nProjetComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProjetComponent,\n  selectors: [[\"app-projet\"]],\n  decls: 2,\n  vars: 0,\n  template: function ProjetComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"projet works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { ProjetComponent };","map":{"version":3,"names":["ProjetComponent","constructor","projetService","projets","ngOnInit","loadProjets","getAllProjets","subscribe","error","console","log","createProjet","projet","response","updateProjet","projetId","deleteProjet","i0","ɵɵdirectiveInject","i1","ProjetService","selectors","decls","vars","template","ProjetComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\ch\\Documents\\GitHub\\GestionLabo\\src\\app\\components\\projet\\projet.component.ts","C:\\Users\\ch\\Documents\\GitHub\\GestionLabo\\src\\app\\components\\projet\\projet.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { IProjet } from 'src/app/models/IProjet';\nimport { ProjetService } from '../../services/projet/projet.service';\n\n@Component({\n  selector: 'app-projet',\n  templateUrl: './projet.component.html',\n  styleUrls: ['./projet.component.css']\n})\nexport class ProjetComponent {\n  projets: IProjet[] = [];\n\n  constructor(private projetService: ProjetService) { }\n\n  ngOnInit() {\n    this.loadProjets();\n  }\n\n  loadProjets() {\n    this.projetService.getAllProjets.subscribe(\n      projets => this.projets = projets,\n      error => console.log(error)\n    );\n  }\n\n  createProjet(projet: IProjet) {\n    this.projetService.createProjet(projet).subscribe(\n      response => {\n        console.log('Projet created successfully.');\n        // Refresh projets list\n        this.loadProjets();\n      },\n      error => console.log(error)\n    );\n  }\n\n  updateProjet(projetId: number, projet: IProjet) {\n    this.projetService.updateProjet(projetId, projet).subscribe(\n      response => {\n        console.log('Etablissement updated successfully.');\n        // Refresh projets list\n        this.loadProjets();\n      },\n      error => console.log(error)\n    );\n  }\n\n  deleteProjet(projetId: number) {\n    this.projetService.deleteProjet(projetId).subscribe(\n      response => {\n        console.log('Projet deleted successfully.');\n        // Refresh projets list\n        this.loadProjets();\n      },\n      error => console.log(error)\n    );\n  }\n}\n","<p>projet works!</p>\n"],"mappings":";;AAIA,MAKaA,eAAe;EAG1BC,YAAoBC,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;IAFjC,KAAAC,OAAO,GAAc,EAAE;EAE6B;EAEpDC,QAAQA,CAAA;IACN,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAA,WAAWA,CAAA;IACT,IAAI,CAACH,aAAa,CAACI,aAAa,CAACC,SAAS,CACxCJ,OAAO,IAAI,IAAI,CAACA,OAAO,GAAGA,OAAO,EACjCK,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAC5B;EACH;EAEAG,YAAYA,CAACC,MAAe;IAC1B,IAAI,CAACV,aAAa,CAACS,YAAY,CAACC,MAAM,CAAC,CAACL,SAAS,CAC/CM,QAAQ,IAAG;MACTJ,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC3C;MACA,IAAI,CAACL,WAAW,EAAE;IACpB,CAAC,EACDG,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAC5B;EACH;EAEAM,YAAYA,CAACC,QAAgB,EAAEH,MAAe;IAC5C,IAAI,CAACV,aAAa,CAACY,YAAY,CAACC,QAAQ,EAAEH,MAAM,CAAC,CAACL,SAAS,CACzDM,QAAQ,IAAG;MACTJ,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;MAClD;MACA,IAAI,CAACL,WAAW,EAAE;IACpB,CAAC,EACDG,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAC5B;EACH;EAEAQ,YAAYA,CAACD,QAAgB;IAC3B,IAAI,CAACb,aAAa,CAACc,YAAY,CAACD,QAAQ,CAAC,CAACR,SAAS,CACjDM,QAAQ,IAAG;MACTJ,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC3C;MACA,IAAI,CAACL,WAAW,EAAE;IACpB,CAAC,EACDG,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAC5B;EACH;;AA/CWR,eAAe,C;mBAAfA,eAAe,EAAAiB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,aAAA;AAAA;AAAfpB,eAAe,C;QAAfA,eAAe;EAAAqB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT5BT,EAAA,CAAAW,cAAA,QAAG;MAAAX,EAAA,CAAAY,MAAA,oBAAa;MAAAZ,EAAA,CAAAa,YAAA,EAAI;;;;;SDSP9B,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}