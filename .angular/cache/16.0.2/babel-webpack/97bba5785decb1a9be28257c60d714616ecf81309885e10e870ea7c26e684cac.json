{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass UcaRechService {\n  constructor(http) {\n    this.http = http;\n    this.ucaRechUrl = 'http://localhost:8082/projets';\n  }\n  getAllProjets() {\n    return this.http.get(this.ucaRechUrl);\n  }\n  getProjetById(id) {\n    return this.http.get(`${this.ucaRechUrl}/${id}`);\n  }\n  createProjet(ucaRech) {\n    return this.http.post(this.ucaRechUrl, ucaRech);\n  }\n  updateProjet(id, ucaRech) {\n    return this.http.put(`${this.ucaRechUrl}/${id}`, ucaRech);\n  }\n  deleteProjet(id) {\n    return this.http.delete(`${this.ucaRechUrl}/${id}`);\n  }\n}\nUcaRechService.ɵfac = function UcaRechService_Factory(t) {\n  return new (t || UcaRechService)(i0.ɵɵinject(i1.HttpClient));\n};\nUcaRechService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UcaRechService,\n  factory: UcaRechService.ɵfac,\n  providedIn: 'root'\n});\nexport { UcaRechService };","map":{"version":3,"names":["UcaRechService","constructor","http","ucaRechUrl","getAllProjets","get","getProjetById","id","createProjet","ucaRech","post","updateProjet","put","deleteProjet","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ch\\Documents\\GitHub\\GestionLabo\\src\\app\\services\\ucaRech\\uca-rech.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IUcaRech } from 'src/app/models/IUcaRech';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UcaRechService {\n  private ucaRechUrl = 'http://localhost:8082/projets';\n\n  constructor(private http: HttpClient) {}\n\n  getAllProjets(): Observable<IUcaRech[]> {\n    return this.http.get<IUcaRech[]>(this.ucaRechUrl);\n  }\n\n  getProjetById(id: number): Observable<IUcaRech> {\n    return this.http.get<IUcaRech>(`${this.ucaRechUrl}/${id}`);\n  }\n\n  createProjet(ucaRech: IUcaRech): Observable<IUcaRech> {\n    return this.http.post<IUcaRech>(this.ucaRechUrl, ucaRech);\n  }\n\n  updateProjet(id: number, ucaRech: IUcaRech): Observable<IUcaRech> {\n    return this.http.put<IUcaRech>(`${this.ucaRechUrl}/${id}`, ucaRech);\n  }\n\n  deleteProjet(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.ucaRechUrl}/${id}`);\n  }\n}\n"],"mappings":";;AAKA,MAGaA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,UAAU,GAAG,+BAA+B;EAEb;EAEvCC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAa,IAAI,CAACF,UAAU,CAAC;EACnD;EAEAG,aAAaA,CAACC,EAAU;IACtB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAW,GAAG,IAAI,CAACF,UAAU,IAAII,EAAE,EAAE,CAAC;EAC5D;EAEAC,YAAYA,CAACC,OAAiB;IAC5B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAW,IAAI,CAACP,UAAU,EAAEM,OAAO,CAAC;EAC3D;EAEAE,YAAYA,CAACJ,EAAU,EAAEE,OAAiB;IACxC,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAW,GAAG,IAAI,CAACT,UAAU,IAAII,EAAE,EAAE,EAAEE,OAAO,CAAC;EACrE;EAEAI,YAAYA,CAACN,EAAU;IACrB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACX,UAAU,IAAII,EAAE,EAAE,CAAC;EAC3D;;AAvBWP,cAAc,C;mBAAdA,cAAc,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdlB,cAAc,C;SAAdA,cAAc;EAAAmB,OAAA,EAAdnB,cAAc,CAAAoB,IAAA;EAAAC,UAAA,EAFb;AAAM;SAEPrB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}