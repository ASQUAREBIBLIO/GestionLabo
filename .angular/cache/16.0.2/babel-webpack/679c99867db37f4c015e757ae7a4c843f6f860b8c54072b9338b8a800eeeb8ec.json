{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/admin/admin.service\";\nclass AdminComponent {\n  constructor(adminService) {\n    this.adminService = adminService;\n  }\n  ngOnInit() {\n    this.getAdmins();\n  }\n  getAdmins() {\n    this.adminService.getAllAdmins().subscribe(response => {\n      this.admins = response;\n    }, error => {\n      console.log('Error fetching admins:', error);\n    });\n  }\n  createAdmin(membre) {\n    this.adminService.createAdmin(membre).subscribe(response => {\n      console.log('Projet created successfully.');\n      // Refresh projets list\n      this.getAdmins();\n    }, error => console.log(error));\n  }\n  updateAdmin(membreId, admin) {\n    this.adminService.updateAdmin(membreId, admin).subscribe(response => {\n      console.log('Etablissement updated successfully.');\n      // Refresh projets list\n      this.getAdmins();\n    }, error => console.log(error));\n  }\n  deleteAdmin(id) {\n    if (confirm('Are you sure you want to delete this membre?')) {\n      this.adminService.deleteAdmin(id).subscribe(() => {\n        this.getAdmins();\n      }, error => {\n        console.log('Error deleting membre:', error);\n      });\n    }\n  }\n}\nAdminComponent.ɵfac = function AdminComponent_Factory(t) {\n  return new (t || AdminComponent)(i0.ɵɵdirectiveInject(i1.AdminService));\n};\nAdminComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AdminComponent,\n  selectors: [[\"app-admin\"]],\n  decls: 2,\n  vars: 0,\n  template: function AdminComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"admin works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { AdminComponent };","map":{"version":3,"names":["AdminComponent","constructor","adminService","ngOnInit","getAdmins","getAllAdmins","subscribe","response","admins","error","console","log","createAdmin","membre","updateAdmin","membreId","admin","deleteAdmin","id","confirm","i0","ɵɵdirectiveInject","i1","AdminService","selectors","decls","vars","template","AdminComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\ch\\Documents\\GitHub\\GestionLabo\\src\\app\\components\\admin\\admin.component.ts","C:\\Users\\ch\\Documents\\GitHub\\GestionLabo\\src\\app\\components\\admin\\admin.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { IAdmin } from 'src/app/models/IAdmin';\nimport { AdminService } from 'src/app/services/admin/admin.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent {\n  admins!: IAdmin[];\n\n  constructor(private adminService: AdminService) { }\n\n  ngOnInit() {\n    this.getAdmins();\n  }\n\n  getAdmins() {\n    this.adminService.getAllAdmins().subscribe(\n      response => {\n        this.admins = response;\n      },\n      error => {\n        console.log('Error fetching admins:', error);\n      }\n    );\n  }\n\n  createAdmin(membre: IAdmin) {\n    this.adminService.createAdmin(membre).subscribe(\n      response => {\n        console.log('Projet created successfully.');\n        // Refresh projets list\n        this.getAdmins();\n      },\n      error => console.log(error)\n    );\n  }\n\n  updateAdmin(membreId: number, admin: IAdmin) {\n    this.adminService.updateAdmin(membreId, admin).subscribe(\n      response => {\n        console.log('Etablissement updated successfully.');\n        // Refresh projets list\n        this.getAdmins();\n      },\n      error => console.log(error)\n    );\n  }\n\n  deleteAdmin(id: number) {\n    if (confirm('Are you sure you want to delete this membre?')) {\n      this.adminService.deleteAdmin(id).subscribe(\n        () => {\n          this.getAdmins();\n        },\n        error => {\n          console.log('Error deleting membre:', error);\n        }\n      );\n    }\n  }\n}\n","<p>admin works!</p>\n"],"mappings":";;AAIA,MAKaA,cAAc;EAGzBC,YAAoBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;EAAkB;EAElDC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAA,SAASA,CAAA;IACP,IAAI,CAACF,YAAY,CAACG,YAAY,EAAE,CAACC,SAAS,CACxCC,QAAQ,IAAG;MACT,IAAI,CAACC,MAAM,GAAGD,QAAQ;IACxB,CAAC,EACDE,KAAK,IAAG;MACNC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,KAAK,CAAC;IAC9C,CAAC,CACF;EACH;EAEAG,WAAWA,CAACC,MAAc;IACxB,IAAI,CAACX,YAAY,CAACU,WAAW,CAACC,MAAM,CAAC,CAACP,SAAS,CAC7CC,QAAQ,IAAG;MACTG,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC3C;MACA,IAAI,CAACP,SAAS,EAAE;IAClB,CAAC,EACDK,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAC5B;EACH;EAEAK,WAAWA,CAACC,QAAgB,EAAEC,KAAa;IACzC,IAAI,CAACd,YAAY,CAACY,WAAW,CAACC,QAAQ,EAAEC,KAAK,CAAC,CAACV,SAAS,CACtDC,QAAQ,IAAG;MACTG,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;MAClD;MACA,IAAI,CAACP,SAAS,EAAE;IAClB,CAAC,EACDK,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAC5B;EACH;EAEAQ,WAAWA,CAACC,EAAU;IACpB,IAAIC,OAAO,CAAC,8CAA8C,CAAC,EAAE;MAC3D,IAAI,CAACjB,YAAY,CAACe,WAAW,CAACC,EAAE,CAAC,CAACZ,SAAS,CACzC,MAAK;QACH,IAAI,CAACF,SAAS,EAAE;MAClB,CAAC,EACDK,KAAK,IAAG;QACNC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,KAAK,CAAC;MAC9C,CAAC,CACF;;EAEL;;AArDWT,cAAc,C;mBAAdA,cAAc,EAAAoB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA;AAAA;AAAdvB,cAAc,C;QAAdA,cAAc;EAAAwB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT3BT,EAAA,CAAAW,cAAA,QAAG;MAAAX,EAAA,CAAAY,MAAA,mBAAY;MAAAZ,EAAA,CAAAa,YAAA,EAAI;;;;;SDSNjC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}