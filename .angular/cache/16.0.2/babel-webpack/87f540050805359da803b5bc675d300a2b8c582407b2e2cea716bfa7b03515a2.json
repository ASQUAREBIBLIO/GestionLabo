{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ExpressionBesoinsService {\n  constructor(http) {\n    this.http = http;\n    this.expressionUrl = 'http://localhost:8082/expressionBesoins';\n  }\n  getAllExpressionBesoins() {\n    return this.http.get(this.expressionUrl);\n  }\n  getExpressionBesoinById(id) {\n    return this.http.get(`${this.expressionUrl}/${id}`);\n  }\n  createExpressionBesoins(expression) {\n    return this.http.post(this.expressionUrl, expression);\n  }\n  /*updateExpressionBesoins(id: number, expression: IExpressionBesoin): Observable<IExpressionBesoin> {\n    return this.http.put<IExpressionBesoin>(`${this.expressionUrl}/${id}`, expression);\n  }*/\n  updateExpressionBesoins(expression) {\n    const url = `${this.expressionUrl}/${expression.id}`;\n    return this.http.put(url, expression);\n  }\n  deleteExpressionBesoins(id) {\n    return this.http.delete(`${this.expressionUrl}/${id}`);\n  }\n}\nExpressionBesoinsService.ɵfac = function ExpressionBesoinsService_Factory(t) {\n  return new (t || ExpressionBesoinsService)(i0.ɵɵinject(i1.HttpClient));\n};\nExpressionBesoinsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ExpressionBesoinsService,\n  factory: ExpressionBesoinsService.ɵfac,\n  providedIn: 'root'\n});\nexport { ExpressionBesoinsService };","map":{"version":3,"names":["ExpressionBesoinsService","constructor","http","expressionUrl","getAllExpressionBesoins","get","getExpressionBesoinById","id","createExpressionBesoins","expression","post","updateExpressionBesoins","url","put","deleteExpressionBesoins","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Asus ROG\\Documents\\GitHub\\GestionLabo\\src\\app\\services\\expressionBesoins\\expression-besoins.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { IExpressionBesoin } from 'src/app/models/IExpressionBesoin';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExpressionBesoinsService {\r\n  private expressionUrl = 'http://localhost:8082/expressionBesoins';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllExpressionBesoins(): Observable<IExpressionBesoin[]> {\r\n    return this.http.get<IExpressionBesoin[]>(this.expressionUrl);\r\n  }\r\n\r\n  getExpressionBesoinById(id: number): Observable<IExpressionBesoin> {\r\n    return this.http.get<IExpressionBesoin>(`${this.expressionUrl}/${id}`);\r\n  }\r\n\r\n  createExpressionBesoins(expression: IExpressionBesoin): Observable<IExpressionBesoin> {\r\n    return this.http.post<IExpressionBesoin>(this.expressionUrl, expression);\r\n  }\r\n\r\n  /*updateExpressionBesoins(id: number, expression: IExpressionBesoin): Observable<IExpressionBesoin> {\r\n    return this.http.put<IExpressionBesoin>(`${this.expressionUrl}/${id}`, expression);\r\n  }*/\r\n\r\n  updateExpressionBesoins(expression: IExpressionBesoin): Observable<any> {\r\n    const url = `${this.expressionUrl}/${expression.id}`;\r\n    return this.http.put(url, expression);\r\n  }\r\n\r\n  deleteExpressionBesoins(id: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.expressionUrl}/${id}`);\r\n  }\r\n}\r\n"],"mappings":";;AAKA,MAGaA,wBAAwB;EAGnCC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,aAAa,GAAG,yCAAyC;EAE1B;EAEvCC,uBAAuBA,CAAA;IACrB,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAsB,IAAI,CAACF,aAAa,CAAC;EAC/D;EAEAG,uBAAuBA,CAACC,EAAU;IAChC,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAoB,GAAG,IAAI,CAACF,aAAa,IAAII,EAAE,EAAE,CAAC;EACxE;EAEAC,uBAAuBA,CAACC,UAA6B;IACnD,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAoB,IAAI,CAACP,aAAa,EAAEM,UAAU,CAAC;EAC1E;EAEA;;;EAIAE,uBAAuBA,CAACF,UAA6B;IACnD,MAAMG,GAAG,GAAG,GAAG,IAAI,CAACT,aAAa,IAAIM,UAAU,CAACF,EAAE,EAAE;IACpD,OAAO,IAAI,CAACL,IAAI,CAACW,GAAG,CAACD,GAAG,EAAEH,UAAU,CAAC;EACvC;EAEAK,uBAAuBA,CAACP,EAAU;IAChC,OAAO,IAAI,CAACL,IAAI,CAACa,MAAM,CAAO,GAAG,IAAI,CAACZ,aAAa,IAAII,EAAE,EAAE,CAAC;EAC9D;;AA5BWP,wBAAwB,C;mBAAxBA,wBAAwB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAxBnB,wBAAwB,C;SAAxBA,wBAAwB;EAAAoB,OAAA,EAAxBpB,wBAAwB,CAAAqB,IAAA;EAAAC,UAAA,EAFvB;AAAM;SAEPtB,wBAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}