{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/laboratoire/laboratoire.service\";\nclass LaboratoireComponent {\n  constructor(laboratoireService) {\n    this.laboratoireService = laboratoireService;\n    this.laboratoires = [];\n  }\n  ngOnInit() {\n    this.loadLaboratoires();\n  }\n  loadLaboratoires() {\n    this.laboratoireService.getLaboratoires().subscribe(laboratoires => this.laboratoires = laboratoires, error => console.log(error));\n  }\n  createLaboratoire(laboratoire) {\n    this.laboratoireService.createLaboratoire(laboratoire).subscribe(response => {\n      console.log('Laboratoire created successfully.');\n      // Refresh laboratoires list\n      this.loadLaboratoires();\n    }, error => console.log(error));\n  }\n  updateLaboratoire(laboratoire) {\n    this.laboratoireService.updateLaboratoire(laboratoire).subscribe(response => {\n      console.log('Laboratoire updated successfully.');\n      // Refresh laboratoires list\n      this.loadLaboratoires();\n    }, error => console.log(error));\n  }\n  deleteLaboratoire(laboratoireId) {\n    this.laboratoireService.deleteLaboratoire(laboratoireId).subscribe(response => {\n      console.log('Laboratoire deleted successfully.');\n      // Refresh laboratoires list\n      this.loadLaboratoires();\n    }, error => console.log(error));\n  }\n}\nLaboratoireComponent.ɵfac = function LaboratoireComponent_Factory(t) {\n  return new (t || LaboratoireComponent)(i0.ɵɵdirectiveInject(i1.LaboratoireService));\n};\nLaboratoireComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LaboratoireComponent,\n  selectors: [[\"app-laboratoire\"]],\n  decls: 2,\n  vars: 0,\n  template: function LaboratoireComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"laboratoire works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { LaboratoireComponent };","map":{"version":3,"names":["LaboratoireComponent","constructor","laboratoireService","laboratoires","ngOnInit","loadLaboratoires","getLaboratoires","subscribe","error","console","log","createLaboratoire","laboratoire","response","updateLaboratoire","deleteLaboratoire","laboratoireId","i0","ɵɵdirectiveInject","i1","LaboratoireService","selectors","decls","vars","template","LaboratoireComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\Asus ROG\\Documents\\GitHub\\GestionLabo\\src\\app\\components\\laboratoire\\laboratoire.component.ts","C:\\Users\\Asus ROG\\Documents\\GitHub\\GestionLabo\\src\\app\\components\\laboratoire\\laboratoire.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { LaboratoireService } from '../../services/laboratoire/laboratoire.service';\nimport { ILaboratoire } from '../../models/ILaboratoire';\n\n@Component({\n  selector: 'app-laboratoire',\n  templateUrl: './laboratoire.component.html',\n  styleUrls: ['./laboratoire.component.css']\n})\nexport class LaboratoireComponent {\n  laboratoires: ILaboratoire[] = [];\n\n  constructor(private laboratoireService: LaboratoireService) { }\n\n  ngOnInit() {\n    this.loadLaboratoires();\n  }\n\n  loadLaboratoires() {\n    this.laboratoireService.getLaboratoires().subscribe(\n      laboratoires => this.laboratoires = laboratoires,\n      error => console.log(error)\n    );\n  }\n\n  createLaboratoire(laboratoire: ILaboratoire) {\n    this.laboratoireService.createLaboratoire(laboratoire).subscribe(\n      response => {\n        console.log('Laboratoire created successfully.');\n        // Refresh laboratoires list\n        this.loadLaboratoires();\n      },\n      error => console.log(error)\n    );\n  }\n\n  updateLaboratoire(laboratoire: ILaboratoire) {\n    this.laboratoireService.updateLaboratoire(laboratoire).subscribe(\n      response => {\n        console.log('Laboratoire updated successfully.');\n        // Refresh laboratoires list\n        this.loadLaboratoires();\n      },\n      error => console.log(error)\n    );\n  }\n\n  deleteLaboratoire(laboratoireId: number) {\n    this.laboratoireService.deleteLaboratoire(laboratoireId).subscribe(\n      response => {\n        console.log('Laboratoire deleted successfully.');\n        // Refresh laboratoires list\n        this.loadLaboratoires();\n      },\n      error => console.log(error)\n    );\n  }\n}\n","<p>laboratoire works!</p>\n"],"mappings":";;AAIA,MAKaA,oBAAoB;EAG/BC,YAAoBC,kBAAsC;IAAtC,KAAAA,kBAAkB,GAAlBA,kBAAkB;IAFtC,KAAAC,YAAY,GAAmB,EAAE;EAE6B;EAE9DC,QAAQA,CAAA;IACN,IAAI,CAACC,gBAAgB,EAAE;EACzB;EAEAA,gBAAgBA,CAAA;IACd,IAAI,CAACH,kBAAkB,CAACI,eAAe,EAAE,CAACC,SAAS,CACjDJ,YAAY,IAAI,IAAI,CAACA,YAAY,GAAGA,YAAY,EAChDK,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAC5B;EACH;EAEAG,iBAAiBA,CAACC,WAAyB;IACzC,IAAI,CAACV,kBAAkB,CAACS,iBAAiB,CAACC,WAAW,CAAC,CAACL,SAAS,CAC9DM,QAAQ,IAAG;MACTJ,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;MAChD;MACA,IAAI,CAACL,gBAAgB,EAAE;IACzB,CAAC,EACDG,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAC5B;EACH;EAEAM,iBAAiBA,CAACF,WAAyB;IACzC,IAAI,CAACV,kBAAkB,CAACY,iBAAiB,CAACF,WAAW,CAAC,CAACL,SAAS,CAC9DM,QAAQ,IAAG;MACTJ,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;MAChD;MACA,IAAI,CAACL,gBAAgB,EAAE;IACzB,CAAC,EACDG,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAC5B;EACH;EAEAO,iBAAiBA,CAACC,aAAqB;IACrC,IAAI,CAACd,kBAAkB,CAACa,iBAAiB,CAACC,aAAa,CAAC,CAACT,SAAS,CAChEM,QAAQ,IAAG;MACTJ,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;MAChD;MACA,IAAI,CAACL,gBAAgB,EAAE;IACzB,CAAC,EACDG,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAC5B;EACH;;AA/CWR,oBAAoB,C;mBAApBA,oBAAoB,EAAAiB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,kBAAA;AAAA;AAApBpB,oBAAoB,C;QAApBA,oBAAoB;EAAAqB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCTjCT,EAAA,CAAAW,cAAA,QAAG;MAAAX,EAAA,CAAAY,MAAA,yBAAkB;MAAAZ,EAAA,CAAAa,YAAA,EAAI;;;;;SDSZ9B,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}