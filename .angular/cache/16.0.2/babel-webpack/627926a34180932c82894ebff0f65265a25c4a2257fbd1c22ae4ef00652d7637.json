{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../services/Auth/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nclass LoginComponent {\n  constructor(http, authService, router) {\n    this.http = http;\n    this.authService = authService;\n    this.router = router;\n  }\n  login() {\n    const credentials = {\n      username: this.username,\n      password: this.password,\n      role: this.role\n    };\n    this.authService.login(credentials).subscribe(response => {\n      // Gérer la réponse de connexion réussie\n      console.log('Connexion réussie');\n      // Rediriger vers le tableau de bord approprié en fonction du rôle\n      this.redirectToDashboard(this.role);\n    }, error => {\n      // Gérer l'erreur de connexion\n      console.error('Erreur de connexion', error);\n    });\n  }\n  redirectToDashboard(role) {\n    // Rediriger vers le tableau de bord approprié en fonction du rôle\n    let dashboardUrl = '';\n    switch (role) {\n      case 'admin':\n        dashboardUrl = '/admin/dashboard';\n        break;\n      case 'directeur':\n        dashboardUrl = '/directeur/dashboard';\n        break;\n      case 'membre':\n        dashboardUrl = '/membre/dashboard';\n        break;\n      case 'responsable-marche':\n        dashboardUrl = '/responsable-marche/dashboard';\n        break;\n      case 'responsable-finance':\n        dashboardUrl = '/responsable-finance/dashboard';\n        break;\n      default:\n        // Redirection par défaut en cas de rôle non reconnu\n        dashboardUrl = '/login';\n        break;\n    }\n    // Redirection vers le tableau de bord correspondant\n    this.router.navigate([dashboardUrl]);\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 22,\n  vars: 3,\n  consts: [[3, \"ngSubmit\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"role\"], [\"id\", \"role\", \"name\", \"role\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"admin\"], [\"value\", \"directeur\"], [\"value\", \"membre\"], [\"value\", \"responsable-marche\"], [\"value\", \"responsable-finance\"], [\"type\", \"submit\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelementStart(1, \"label\", 1);\n      i0.ɵɵtext(2, \"Nom d'utilisateur:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.username = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"label\", 3);\n      i0.ɵɵtext(5, \"Mot de passe:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"label\", 5);\n      i0.ɵɵtext(8, \"R\\u00F4le:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"select\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_select_ngModelChange_9_listener($event) {\n        return ctx.role = $event;\n      });\n      i0.ɵɵelementStart(10, \"option\", 7);\n      i0.ɵɵtext(11, \"Admin\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"option\", 8);\n      i0.ɵɵtext(13, \"Directeur\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"option\", 9);\n      i0.ɵɵtext(15, \"Membre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"option\", 10);\n      i0.ɵɵtext(17, \"Responsable March\\u00E9\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"option\", 11);\n      i0.ɵɵtext(19, \"Responsable Finance\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"button\", 12);\n      i0.ɵɵtext(21, \"Se connecter\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.username);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.role);\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { LoginComponent };","map":{"version":3,"names":["LoginComponent","constructor","http","authService","router","login","credentials","username","password","role","subscribe","response","console","log","redirectToDashboard","error","dashboardUrl","navigate","i0","ɵɵdirectiveInject","i1","HttpClient","i2","AuthService","i3","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","LoginComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","LoginComponent_Template_input_ngModelChange_3_listener","$event","LoginComponent_Template_input_ngModelChange_6_listener","LoginComponent_Template_select_ngModelChange_9_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Asus ROG\\Documents\\GitHub\\GestionLabo\\src\\app\\components\\login\\login.component.ts","C:\\Users\\Asus ROG\\Documents\\GitHub\\GestionLabo\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from '../../services/Auth/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  username!: string;\n  password!: string;\n  role!: string;\n\n  constructor(private http: HttpClient, private authService: AuthService , private router: Router ) {}\n  \n\n  login() {\n    const credentials = {\n      username: this.username,\n      password: this.password,\n      role: this.role\n    };\n\n    this.authService.login(credentials).subscribe(\n      response => {\n        // Gérer la réponse de connexion réussie\n        console.log('Connexion réussie');\n        // Rediriger vers le tableau de bord approprié en fonction du rôle\n        this.redirectToDashboard(this.role);\n      },\n      error => {\n        // Gérer l'erreur de connexion\n        console.error('Erreur de connexion', error);\n      }\n    );\n  }\n\n  redirectToDashboard(role: string) {\n    // Rediriger vers le tableau de bord approprié en fonction du rôle\n    let dashboardUrl = '';\n  \n    switch (role) {\n      case 'admin':\n        dashboardUrl = '/admin/dashboard';\n        break;\n      case 'directeur':\n        dashboardUrl = '/directeur/dashboard';\n        break;\n      case 'membre':\n        dashboardUrl = '/membre/dashboard';\n        break;\n      case 'responsable-marche':\n        dashboardUrl = '/responsable-marche/dashboard';\n        break;\n      case 'responsable-finance':\n        dashboardUrl = '/responsable-finance/dashboard';\n        break;\n      default:\n        // Redirection par défaut en cas de rôle non reconnu\n        dashboardUrl = '/login';\n        break;\n    }\n  \n    // Redirection vers le tableau de bord correspondant\n    this.router.navigate([dashboardUrl]);\n  }\n}\n","<form (ngSubmit)=\"login()\">\n    <label for=\"username\">Nom d'utilisateur:</label>\n    <input type=\"text\" id=\"username\" name=\"username\" [(ngModel)]=\"username\">\n  \n    <label for=\"password\">Mot de passe:</label>\n    <input type=\"password\" id=\"password\" name=\"password\" [(ngModel)]=\"password\">\n  \n    <label for=\"role\">Rôle:</label>\n    <select id=\"role\" name=\"role\" [(ngModel)]=\"role\">\n      <option value=\"admin\">Admin</option>\n      <option value=\"directeur\">Directeur</option>\n      <option value=\"membre\">Membre</option>\n      <option value=\"responsable-marche\">Responsable Marché</option>\n      <option value=\"responsable-finance\">Responsable Finance</option>\n    </select>\n  \n    <button type=\"submit\">Se connecter</button>\n  </form>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}