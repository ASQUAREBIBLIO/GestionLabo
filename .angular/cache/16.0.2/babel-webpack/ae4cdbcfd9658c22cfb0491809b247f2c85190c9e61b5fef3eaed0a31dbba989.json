{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nlet AdminComponent = class AdminComponent {\n  constructor(formbuilder, http, authService, router, dialog) {\n    this.formbuilder = formbuilder;\n    this.http = http;\n    this.authService = authService;\n    this.router = router;\n    this.dialog = dialog;\n    this.updateProfileLoading = false;\n  }\n  ngOnInit() {\n    this.smallChart1();\n    this.smallChart2();\n    this.smallChart3();\n    this.smallChart4();\n    this.chart1();\n    this.chart2();\n    // this.formdata = this.formbuilder.group({\n    //   id: new FormControl(\"\", [Validators.required]),\n    //   email: new FormControl(\"\", [Validators.required, Validators.email, Validators.minLength(5)]),\n    //   firstName: new FormControl(\"\", [Validators.required]),\n    //   lastName: new FormControl(\"\", [Validators.required]),\n    //   role: new FormControl(\"\", [Validators.required]),\n    //   gender: new FormControl(\"\", [Validators.required]),\n    //   mobile: new FormControl(\"\", [Validators.required]),\n    //   address: new FormControl(\"\", [Validators.required]),\n    //   dateOfBirth: new FormControl(\"\", [Validators.required]),\n    //   // Doctor\n    //   designation: new FormControl(\"\", []),\n    //   department: new FormControl(\"\", []),\n    //   education: new FormControl(\"\", []),\n    //   specialization: new FormControl(\"\", []),\n    //   degree: new FormControl(\"\", []),\n    //   joiningDate: new FormControl(moment(new Date()).format(\"DD-MM-YYYY\"), []),\n    //   // Patient\n    //   age: new FormControl(null, []),\n    //   maritalStatus: new FormControl(\"\", []),\n    //   bloodGroup: new FormControl(\"\", []),\n    //   bloodPressure: new FormControl(\"\", []),\n    //   sugger: new FormControl(\"\", []),\n    //   injury: new FormControl(\"\", []),\n    //   // Less img\n    // });\n    // this.authService.currentUser.subscribe((user: any) => {\n    //   this.userData = user\n    //   this.formdata.controls['id'].patchValue(user.id)\n    //   this.formdata.controls['email'].patchValue(user.email)\n    //   this.formdata.controls['firstName'].patchValue(user.firstName)\n    //   this.formdata.controls['lastName'].patchValue(user.lastName)\n    // })\n    // this.formdata.get('role').valueChanges.subscribe(role => {\n    //   console.log(role);\n    //   if (role == 'doctor') {\n    //     // Enable Validator for Doctor\n    //     this.formdata.controls['designation'] = new FormControl(\"\", [Validators.required]);\n    //     this.formdata.controls['department'] = new FormControl(\"\", [Validators.required]);\n    //     this.formdata.controls['education'] = new FormControl(\"\", [Validators.required]);\n    //     this.formdata.controls['specialization'] = new FormControl(\"\", [Validators.required]);\n    //     this.formdata.controls['degree'] = new FormControl(\"\", [Validators.required]);\n    //     // Disable Validator for Patient\n    //     this.formdata.controls['age'].clearValidators();\n    //     this.formdata.controls['maritalStatus'].clearValidators();\n    //     this.formdata.controls['bloodGroup'].clearValidators();\n    //     this.formdata.controls['bloodPressure'].clearValidators();\n    //     this.formdata.controls['sugger'].clearValidators();\n    //     this.formdata.controls['injury'].clearValidators();\n    //   } else if (role == 'patient') {\n    //     // Enable Validator for Patient\n    //     this.formdata.controls['age'] = new FormControl(null, [Validators.required]);\n    //     this.formdata.controls['maritalStatus'] = new FormControl(\"\", [Validators.required]);\n    //     this.formdata.controls['bloodGroup'] = new FormControl(\"\", [Validators.required]);\n    //     this.formdata.controls['bloodPressure'] = new FormControl(\"\", [Validators.required]);\n    //     this.formdata.controls['sugger'] = new FormControl(\"\", [Validators.required]);\n    //     this.formdata.controls['injury'] = new FormControl(\"\", [Validators.required]);\n    //     // Disable Validator for Doctor\n    //     this.formdata.controls['designation'].clearValidators();\n    //     this.formdata.controls['department'].clearValidators();\n    //     this.formdata.controls['education'].clearValidators();\n    //     this.formdata.controls['specialization'].clearValidators();\n    //     this.formdata.controls['degree'].clearValidators();\n    //     console.log(this.formdata);\n    //   }\n    // })\n    let tempDirection;\n    // if (localStorage.getItem(\"isRtl\") === \"true\") {\n    // tempDirection = \"rtl\";\n    // } else {\n    tempDirection = \"ltr\";\n    // }\n  }\n  // applyDoctorOrPatientValue(value) {\n  //   if (this.formdata.get('role').value == 'doctor') {\n  //     this.formdata.patchValue({\n  //       designation: value.designation,\n  //       department: value.department,\n  //       education: value.education,\n  //       specialization: value.specialization,\n  //       degree: value.degree,\n  //     })\n  //   } else if (this.formdata.get('role').value == 'patient') {\n  //     this.formdata.patchValue({\n  //       age: value.age,\n  //       maritalStatus: value.maritalStatus,\n  //       bloodGroup: value.bloodGroup,\n  //       bloodPressure: value.bloodPressure,\n  //       sugger: value.sugger,\n  //       injury: value.injury,\n  //     })\n  //   }\n  //   console.log(this.formdata);\n  // }\n  // updateProfile() {    \n  //   var userId = '9ff7c6cd-85ae-41cf-8d88-fb9308688ffc'\n  //   return this.http\n  //     .put<any>(`${environment.clinivaAuthUrl}/user/${this.formdata.value.id}`, {\n  //       ...this.formdata.value,\n  //       dateOfBirth: moment(this.formdata.get('dateOfBirth').value).format('DD-MM-YYYY')\n  //     }).subscribe((result) => {\n  //       // Hit API Update User\n  //       result.accessToken = this.userData.accessToken\n  //       localStorage.setItem(\"currentUser\", JSON.stringify(result));\n  //       this.authService.currentUserSubject.next(result)\n  //       const role = result.role;\n  //       if (role === Role.All || role === Role.Admin || role == Role.None) {\n  //         this.router.navigate([\"/admin/dashboard/main\"]);\n  //       } else if (role === Role.Doctor) {\n  //         this.router.navigate([\"/doctor/dashboard\"]);\n  //       } else if (role === Role.Patient) {\n  //         this.router.navigate([\"/patient/dashboard\"]);\n  //       } else {\n  //         this.router.navigate([\"/authentication/signin\"]);\n  //       }\n  //       this.updateProfileLoading = false;\n  //     }, err => {\n  //       console.log('err', err);\n  //       this.updateProfileLoading = false;\n  //     })\n  // }\n  smallChart1() {\n    this.cardChart1 = {\n      responsive: true,\n      tooltips: {\n        enabled: false\n      },\n      legend: {\n        display: false\n      },\n      scales: {\n        yAxes: [{\n          gridLines: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {\n            beginAtZero: true,\n            display: false\n          }\n        }],\n        xAxes: [{\n          gridLines: {\n            drawBorder: false,\n            display: false\n          },\n          ticks: {\n            display: false\n          }\n        }]\n      },\n      title: {\n        display: false\n      }\n    };\n    this.cardChart1Data = [{\n      label: \"New Patients\",\n      data: [50, 61, 80, 50, 72, 52, 60, 41, 30, 45, 70, 40, 93, 63, 50, 62],\n      borderWidth: 4,\n      pointStyle: \"circle\",\n      pointRadius: 4,\n      borderColor: \"rgba(103,119,239,.7)\",\n      pointBackgroundColor: \"rgba(103,119,239,.2)\",\n      backgroundColor: \"rgba(103,119,239,.2)\",\n      pointBorderColor: \"transparent\"\n    }];\n    this.cardChart1Label = [\"16-07-2018\", \"17-07-2018\", \"18-07-2018\", \"19-07-2018\", \"20-07-2018\", \"21-07-2018\", \"22-07-2018\", \"23-07-2018\", \"24-07-2018\", \"25-07-2018\", \"26-07-2018\", \"27-07-2018\", \"28-07-2018\", \"29-07-2018\", \"30-07-2018\", \"31-07-2018\"];\n  }\n  smallChart2() {\n    this.cardChart2 = {\n      responsive: true,\n      tooltips: {\n        enabled: false\n      },\n      legend: {\n        display: false\n      },\n      scales: {\n        yAxes: [{\n          gridLines: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {\n            beginAtZero: true,\n            display: false\n          }\n        }],\n        xAxes: [{\n          gridLines: {\n            drawBorder: false,\n            display: false\n          },\n          ticks: {\n            display: false\n          }\n        }]\n      },\n      title: {\n        display: false\n      }\n    };\n    this.cardChart2Data = [{\n      label: \"New Patients\",\n      data: [50, 61, 80, 50, 40, 93, 63, 50, 62, 72, 52, 60, 41, 30, 45, 70],\n      borderWidth: 4,\n      pointStyle: \"circle\",\n      pointRadius: 4,\n      borderColor: \"rgba(253,126,20,.7)\",\n      pointBackgroundColor: \"rgba(253,126,20,.2)\",\n      backgroundColor: \"rgba(253,126,20,.2)\",\n      pointBorderColor: \"transparent\"\n    }];\n    this.cardChart2Label = [\"16-07-2018\", \"17-07-2018\", \"18-07-2018\", \"19-07-2018\", \"20-07-2018\", \"21-07-2018\", \"22-07-2018\", \"23-07-2018\", \"24-07-2018\", \"25-07-2018\", \"26-07-2018\", \"27-07-2018\", \"28-07-2018\", \"29-07-2018\", \"30-07-2018\", \"31-07-2018\"];\n  }\n  smallChart3() {\n    this.cardChart3 = {\n      responsive: true,\n      tooltips: {\n        enabled: false\n      },\n      legend: {\n        display: false\n      },\n      scales: {\n        yAxes: [{\n          gridLines: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {\n            beginAtZero: true,\n            display: false\n          }\n        }],\n        xAxes: [{\n          gridLines: {\n            drawBorder: false,\n            display: false\n          },\n          ticks: {\n            display: false\n          }\n        }]\n      },\n      title: {\n        display: false\n      }\n    };\n    this.cardChart3Data = [{\n      label: \"New Patients\",\n      data: [52, 60, 41, 30, 45, 70, 50, 61, 80, 50, 72, 40, 93, 63, 50, 62],\n      borderWidth: 4,\n      pointStyle: \"circle\",\n      pointRadius: 4,\n      borderColor: \"rgba(40,167,69,.7)\",\n      pointBackgroundColor: \"rgba(40,167,69,.2)\",\n      backgroundColor: \"rgba(40,167,69,.2)\",\n      pointBorderColor: \"transparent\"\n    }];\n    this.cardChart3Label = [\"16-07-2018\", \"17-07-2018\", \"18-07-2018\", \"19-07-2018\", \"20-07-2018\", \"21-07-2018\", \"22-07-2018\", \"23-07-2018\", \"24-07-2018\", \"25-07-2018\", \"26-07-2018\", \"27-07-2018\", \"28-07-2018\", \"29-07-2018\", \"30-07-2018\", \"31-07-2018\"];\n  }\n  smallChart4() {\n    this.cardChart4 = {\n      responsive: true,\n      tooltips: {\n        enabled: false\n      },\n      legend: {\n        display: false\n      },\n      scales: {\n        yAxes: [{\n          gridLines: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {\n            beginAtZero: true,\n            display: false\n          }\n        }],\n        xAxes: [{\n          gridLines: {\n            drawBorder: false,\n            display: false\n          },\n          ticks: {\n            display: false\n          }\n        }]\n      },\n      title: {\n        display: false\n      }\n    };\n    this.cardChart4Data = [{\n      label: \"New Patients\",\n      data: [30, 45, 70, 40, 93, 63, 50, 62, 50, 61, 80, 50, 72, 52, 60, 41],\n      borderWidth: 4,\n      pointStyle: \"circle\",\n      pointRadius: 4,\n      borderColor: \"rgba(0,123,255,.7)\",\n      pointBackgroundColor: \"rgba(0,123,255,.2)\",\n      backgroundColor: \"rgba(0,123,255,.2)\",\n      pointBorderColor: \"transparent\"\n    }];\n    this.cardChart4Label = [\"16-07-2018\", \"17-07-2018\", \"18-07-2018\", \"19-07-2018\", \"20-07-2018\", \"21-07-2018\", \"22-07-2018\", \"23-07-2018\", \"24-07-2018\", \"25-07-2018\", \"26-07-2018\", \"27-07-2018\", \"28-07-2018\", \"29-07-2018\", \"30-07-2018\", \"31-07-2018\"];\n  }\n  chart1() {\n    this.areaChartOptions = {\n      series: [{\n        name: \"New Patients\",\n        data: [31, 40, 28, 51, 42, 85, 77]\n      }, {\n        name: \"Old Patients\",\n        data: [11, 32, 45, 32, 34, 52, 41]\n      }],\n      chart: {\n        height: 350,\n        type: \"area\",\n        toolbar: {\n          show: false\n        },\n        foreColor: \"#9aa0ac\"\n      },\n      colors: [\"#407fe4\", \"#908e8e\"],\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: \"smooth\"\n      },\n      xaxis: {\n        type: \"datetime\",\n        categories: [\"2018-09-19\", \"2018-09-20\", \"2018-09-21\", \"2018-09-22\", \"2018-09-23\", \"2018-09-24\", \"2018-09-25\"]\n      },\n      legend: {\n        show: true,\n        position: \"top\",\n        horizontalAlign: \"center\",\n        offsetX: 0,\n        offsetY: 0\n      },\n      tooltip: {\n        theme: \"dark\",\n        marker: {\n          show: true\n        },\n        x: {\n          show: true\n        }\n      }\n    };\n  }\n  chart2() {\n    this.barChartOptions = {\n      series: [{\n        name: \"Colds and Flu\",\n        data: [44, 55, 41, 67, 22, 43]\n      }, {\n        name: \"Headaches\",\n        data: [13, 23, 20, 8, 13, 27]\n      }, {\n        name: \"Malaria\",\n        data: [11, 17, 15, 15, 21, 14]\n      }, {\n        name: \"Typhoid\",\n        data: [21, 7, 25, 13, 22, 8]\n      }],\n      chart: {\n        type: \"bar\",\n        height: 350,\n        foreColor: \"#9aa0ac\",\n        stacked: true,\n        toolbar: {\n          show: false\n        }\n      },\n      responsive: [{\n        breakpoint: 480,\n        options: {\n          legend: {\n            position: \"bottom\",\n            offsetX: -10,\n            offsetY: 0\n          }\n        }\n      }],\n      plotOptions: {\n        bar: {\n          horizontal: false,\n          columnWidth: \"30%\"\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      xaxis: {\n        type: \"category\",\n        categories: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\n      },\n      legend: {\n        show: false\n      },\n      fill: {\n        opacity: 0.8,\n        colors: [\"#01B8AA\", \"#374649\", \"#FD625E\", \"#F2C80F\"]\n      },\n      tooltip: {\n        theme: \"dark\",\n        marker: {\n          show: true\n        },\n        x: {\n          show: true\n        }\n      }\n    };\n  }\n};\nAdminComponent = __decorate([Component({\n  selector: \"app-admin\",\n  templateUrl: \"./admin.component.html\",\n  styleUrls: [\"./admin.component.scss\"]\n})], AdminComponent);\nexport { AdminComponent };","map":{"version":3,"names":["Component","AdminComponent","constructor","formbuilder","http","authService","router","dialog","updateProfileLoading","ngOnInit","smallChart1","smallChart2","smallChart3","smallChart4","chart1","chart2","tempDirection","cardChart1","responsive","tooltips","enabled","legend","display","scales","yAxes","gridLines","drawBorder","ticks","beginAtZero","xAxes","title","cardChart1Data","label","data","borderWidth","pointStyle","pointRadius","borderColor","pointBackgroundColor","backgroundColor","pointBorderColor","cardChart1Label","cardChart2","cardChart2Data","cardChart2Label","cardChart3","cardChart3Data","cardChart3Label","cardChart4","cardChart4Data","cardChart4Label","areaChartOptions","series","name","chart","height","type","toolbar","show","foreColor","colors","dataLabels","stroke","curve","xaxis","categories","position","horizontalAlign","offsetX","offsetY","tooltip","theme","marker","x","barChartOptions","stacked","breakpoint","options","plotOptions","bar","horizontal","columnWidth","fill","opacity","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Asus ROG\\Documents\\GitHub\\GestionLabo\\src\\app\\components\\admin\\admin.component.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\r\n\r\nimport {\r\n  ChartComponent,\r\n  ApexAxisChartSeries,\r\n  ApexChart,\r\n  ApexXAxis,\r\n  ApexDataLabels,\r\n  ApexTooltip,\r\n  ApexYAxis,\r\n  ApexPlotOptions,\r\n  ApexStroke,\r\n  ApexLegend,\r\n  ApexFill,\r\n  ApexResponsive,\r\n} from \"ng-apexcharts\";\r\nimport { Router } from \"@angular/router\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { UpdateDialogComponent } from \"../update-dialog/update-dialog.component\";\r\nexport type ChartOptions = {\r\n  series: ApexAxisChartSeries;\r\n  chart: ApexChart;\r\n  xaxis: ApexXAxis;\r\n  yaxis: ApexYAxis;\r\n  stroke: ApexStroke;\r\n  tooltip: ApexTooltip;\r\n  dataLabels: ApexDataLabels;\r\n  legend: ApexLegend;\r\n  responsive: ApexResponsive[];\r\n  plotOptions: ApexPlotOptions;\r\n  fill: ApexFill;\r\n  colors: string[];\r\n};\r\n@Component({\r\n  selector: \"app-admin\",\r\n  templateUrl: \"./admin.component.html\",\r\n  styleUrls: [\"./admin.component.scss\"],\r\n})\r\nexport class AdminComponent implements OnInit {\r\n  public cardChart1: any;\r\n  public cardChart1Data: any;\r\n  public cardChart1Label: any;\r\n\r\n  public cardChart2: any;\r\n  public cardChart2Data: any;\r\n  public cardChart2Label: any;\r\n\r\n  public cardChart3: any;\r\n  public cardChart3Data: any;\r\n  public cardChart3Label: any;\r\n\r\n  public cardChart4: any;\r\n  public cardChart4Data: any;\r\n  public cardChart4Label: any;\r\n\r\n  public areaChartOptions!: Partial<ChartOptions>;\r\n  public barChartOptions!: Partial<ChartOptions>;\r\n\r\n  formdata!: FormGroup;\r\n  userData: any\r\n  updateProfileLoading: boolean = false;\r\n\r\n  constructor(\r\n    private formbuilder: FormBuilder,\r\n    private http: HttpClient,\r\n    private authService: AuthService ,\r\n    private router: Router,\r\n    public dialog: MatDialog,\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.smallChart1();\r\n    this.smallChart2();\r\n    this.smallChart3();\r\n    this.smallChart4();\r\n    this.chart1();\r\n    this.chart2();\r\n\r\n    // this.formdata = this.formbuilder.group({\r\n    //   id: new FormControl(\"\", [Validators.required]),\r\n    //   email: new FormControl(\"\", [Validators.required, Validators.email, Validators.minLength(5)]),\r\n    //   firstName: new FormControl(\"\", [Validators.required]),\r\n    //   lastName: new FormControl(\"\", [Validators.required]),\r\n    //   role: new FormControl(\"\", [Validators.required]),\r\n    //   gender: new FormControl(\"\", [Validators.required]),\r\n    //   mobile: new FormControl(\"\", [Validators.required]),\r\n    //   address: new FormControl(\"\", [Validators.required]),\r\n    //   dateOfBirth: new FormControl(\"\", [Validators.required]),\r\n    //   // Doctor\r\n    //   designation: new FormControl(\"\", []),\r\n    //   department: new FormControl(\"\", []),\r\n    //   education: new FormControl(\"\", []),\r\n    //   specialization: new FormControl(\"\", []),\r\n    //   degree: new FormControl(\"\", []),\r\n    //   joiningDate: new FormControl(moment(new Date()).format(\"DD-MM-YYYY\"), []),\r\n    //   // Patient\r\n    //   age: new FormControl(null, []),\r\n    //   maritalStatus: new FormControl(\"\", []),\r\n    //   bloodGroup: new FormControl(\"\", []),\r\n    //   bloodPressure: new FormControl(\"\", []),\r\n    //   sugger: new FormControl(\"\", []),\r\n    //   injury: new FormControl(\"\", []),\r\n    //   // Less img\r\n    // });\r\n\r\n    // this.authService.currentUser.subscribe((user: any) => {\r\n    //   this.userData = user\r\n    //   this.formdata.controls['id'].patchValue(user.id)\r\n    //   this.formdata.controls['email'].patchValue(user.email)\r\n    //   this.formdata.controls['firstName'].patchValue(user.firstName)\r\n    //   this.formdata.controls['lastName'].patchValue(user.lastName)\r\n    // })\r\n\r\n    // this.formdata.get('role').valueChanges.subscribe(role => {\r\n    //   console.log(role);\r\n\r\n    //   if (role == 'doctor') {\r\n    //     // Enable Validator for Doctor\r\n    //     this.formdata.controls['designation'] = new FormControl(\"\", [Validators.required]);\r\n    //     this.formdata.controls['department'] = new FormControl(\"\", [Validators.required]);\r\n    //     this.formdata.controls['education'] = new FormControl(\"\", [Validators.required]);\r\n    //     this.formdata.controls['specialization'] = new FormControl(\"\", [Validators.required]);\r\n    //     this.formdata.controls['degree'] = new FormControl(\"\", [Validators.required]);\r\n\r\n    //     // Disable Validator for Patient\r\n    //     this.formdata.controls['age'].clearValidators();\r\n    //     this.formdata.controls['maritalStatus'].clearValidators();\r\n    //     this.formdata.controls['bloodGroup'].clearValidators();\r\n    //     this.formdata.controls['bloodPressure'].clearValidators();\r\n    //     this.formdata.controls['sugger'].clearValidators();\r\n    //     this.formdata.controls['injury'].clearValidators();\r\n    //   } else if (role == 'patient') {\r\n    //     // Enable Validator for Patient\r\n    //     this.formdata.controls['age'] = new FormControl(null, [Validators.required]);\r\n    //     this.formdata.controls['maritalStatus'] = new FormControl(\"\", [Validators.required]);\r\n    //     this.formdata.controls['bloodGroup'] = new FormControl(\"\", [Validators.required]);\r\n    //     this.formdata.controls['bloodPressure'] = new FormControl(\"\", [Validators.required]);\r\n    //     this.formdata.controls['sugger'] = new FormControl(\"\", [Validators.required]);\r\n    //     this.formdata.controls['injury'] = new FormControl(\"\", [Validators.required]);\r\n\r\n    //     // Disable Validator for Doctor\r\n    //     this.formdata.controls['designation'].clearValidators();\r\n    //     this.formdata.controls['department'].clearValidators();\r\n    //     this.formdata.controls['education'].clearValidators();\r\n    //     this.formdata.controls['specialization'].clearValidators();\r\n    //     this.formdata.controls['degree'].clearValidators();\r\n    //     console.log(this.formdata);\r\n    //   }\r\n    // })\r\n\r\n\r\n    let tempDirection;\r\n    // if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      // tempDirection = \"rtl\";\r\n    // } else {\r\n      tempDirection = \"ltr\";\r\n    // }\r\n    \r\n  }\r\n\r\n  // applyDoctorOrPatientValue(value) {\r\n  //   if (this.formdata.get('role').value == 'doctor') {\r\n  //     this.formdata.patchValue({\r\n  //       designation: value.designation,\r\n  //       department: value.department,\r\n  //       education: value.education,\r\n  //       specialization: value.specialization,\r\n  //       degree: value.degree,\r\n  //     })\r\n  //   } else if (this.formdata.get('role').value == 'patient') {\r\n  //     this.formdata.patchValue({\r\n  //       age: value.age,\r\n  //       maritalStatus: value.maritalStatus,\r\n  //       bloodGroup: value.bloodGroup,\r\n  //       bloodPressure: value.bloodPressure,\r\n  //       sugger: value.sugger,\r\n  //       injury: value.injury,\r\n  //     })\r\n  //   }\r\n  //   console.log(this.formdata);\r\n\r\n  // }\r\n\r\n  // updateProfile() {    \r\n  //   var userId = '9ff7c6cd-85ae-41cf-8d88-fb9308688ffc'\r\n  //   return this.http\r\n  //     .put<any>(`${environment.clinivaAuthUrl}/user/${this.formdata.value.id}`, {\r\n  //       ...this.formdata.value,\r\n  //       dateOfBirth: moment(this.formdata.get('dateOfBirth').value).format('DD-MM-YYYY')\r\n  //     }).subscribe((result) => {\r\n  //       // Hit API Update User\r\n  //       result.accessToken = this.userData.accessToken\r\n  //       localStorage.setItem(\"currentUser\", JSON.stringify(result));\r\n  //       this.authService.currentUserSubject.next(result)\r\n\r\n  //       const role = result.role;\r\n  //       if (role === Role.All || role === Role.Admin || role == Role.None) {\r\n  //         this.router.navigate([\"/admin/dashboard/main\"]);\r\n  //       } else if (role === Role.Doctor) {\r\n  //         this.router.navigate([\"/doctor/dashboard\"]);\r\n  //       } else if (role === Role.Patient) {\r\n  //         this.router.navigate([\"/patient/dashboard\"]);\r\n  //       } else {\r\n  //         this.router.navigate([\"/authentication/signin\"]);\r\n  //       }\r\n  //       this.updateProfileLoading = false;\r\n  //     }, err => {\r\n  //       console.log('err', err);\r\n  //       this.updateProfileLoading = false;\r\n  //     })\r\n  // }\r\n\r\n  private smallChart1() {\r\n    this.cardChart1 = {\r\n      responsive: true,\r\n      tooltips: {\r\n        enabled: false,\r\n      },\r\n      legend: {\r\n        display: false,\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            gridLines: {\r\n              display: false,\r\n              drawBorder: false,\r\n            },\r\n            ticks: {\r\n              beginAtZero: true,\r\n              display: false,\r\n            },\r\n          },\r\n        ],\r\n        xAxes: [\r\n          {\r\n            gridLines: {\r\n              drawBorder: false,\r\n              display: false,\r\n            },\r\n            ticks: {\r\n              display: false,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      title: {\r\n        display: false,\r\n      },\r\n    };\r\n    this.cardChart1Data = [\r\n      {\r\n        label: \"New Patients\",\r\n        data: [50, 61, 80, 50, 72, 52, 60, 41, 30, 45, 70, 40, 93, 63, 50, 62],\r\n        borderWidth: 4,\r\n        pointStyle: \"circle\",\r\n        pointRadius: 4,\r\n        borderColor: \"rgba(103,119,239,.7)\",\r\n        pointBackgroundColor: \"rgba(103,119,239,.2)\",\r\n        backgroundColor: \"rgba(103,119,239,.2)\",\r\n        pointBorderColor: \"transparent\",\r\n      },\r\n    ];\r\n    this.cardChart1Label = [\r\n      \"16-07-2018\",\r\n      \"17-07-2018\",\r\n      \"18-07-2018\",\r\n      \"19-07-2018\",\r\n      \"20-07-2018\",\r\n      \"21-07-2018\",\r\n      \"22-07-2018\",\r\n      \"23-07-2018\",\r\n      \"24-07-2018\",\r\n      \"25-07-2018\",\r\n      \"26-07-2018\",\r\n      \"27-07-2018\",\r\n      \"28-07-2018\",\r\n      \"29-07-2018\",\r\n      \"30-07-2018\",\r\n      \"31-07-2018\",\r\n    ];\r\n  }\r\n  private smallChart2() {\r\n    this.cardChart2 = {\r\n      responsive: true,\r\n      tooltips: {\r\n        enabled: false,\r\n      },\r\n      legend: {\r\n        display: false,\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            gridLines: {\r\n              display: false,\r\n              drawBorder: false,\r\n            },\r\n            ticks: {\r\n              beginAtZero: true,\r\n              display: false,\r\n            },\r\n          },\r\n        ],\r\n        xAxes: [\r\n          {\r\n            gridLines: {\r\n              drawBorder: false,\r\n              display: false,\r\n            },\r\n            ticks: {\r\n              display: false,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      title: {\r\n        display: false,\r\n      },\r\n    };\r\n    this.cardChart2Data = [\r\n      {\r\n        label: \"New Patients\",\r\n        data: [50, 61, 80, 50, 40, 93, 63, 50, 62, 72, 52, 60, 41, 30, 45, 70],\r\n        borderWidth: 4,\r\n        pointStyle: \"circle\",\r\n        pointRadius: 4,\r\n        borderColor: \"rgba(253,126,20,.7)\",\r\n        pointBackgroundColor: \"rgba(253,126,20,.2)\",\r\n        backgroundColor: \"rgba(253,126,20,.2)\",\r\n        pointBorderColor: \"transparent\",\r\n      },\r\n    ];\r\n    this.cardChart2Label = [\r\n      \"16-07-2018\",\r\n      \"17-07-2018\",\r\n      \"18-07-2018\",\r\n      \"19-07-2018\",\r\n      \"20-07-2018\",\r\n      \"21-07-2018\",\r\n      \"22-07-2018\",\r\n      \"23-07-2018\",\r\n      \"24-07-2018\",\r\n      \"25-07-2018\",\r\n      \"26-07-2018\",\r\n      \"27-07-2018\",\r\n      \"28-07-2018\",\r\n      \"29-07-2018\",\r\n      \"30-07-2018\",\r\n      \"31-07-2018\",\r\n    ];\r\n  }\r\n  private smallChart3() {\r\n    this.cardChart3 = {\r\n      responsive: true,\r\n      tooltips: {\r\n        enabled: false,\r\n      },\r\n      legend: {\r\n        display: false,\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            gridLines: {\r\n              display: false,\r\n              drawBorder: false,\r\n            },\r\n            ticks: {\r\n              beginAtZero: true,\r\n              display: false,\r\n            },\r\n          },\r\n        ],\r\n        xAxes: [\r\n          {\r\n            gridLines: {\r\n              drawBorder: false,\r\n              display: false,\r\n            },\r\n            ticks: {\r\n              display: false,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      title: {\r\n        display: false,\r\n      },\r\n    };\r\n    this.cardChart3Data = [\r\n      {\r\n        label: \"New Patients\",\r\n        data: [52, 60, 41, 30, 45, 70, 50, 61, 80, 50, 72, 40, 93, 63, 50, 62],\r\n        borderWidth: 4,\r\n        pointStyle: \"circle\",\r\n        pointRadius: 4,\r\n        borderColor: \"rgba(40,167,69,.7)\",\r\n        pointBackgroundColor: \"rgba(40,167,69,.2)\",\r\n        backgroundColor: \"rgba(40,167,69,.2)\",\r\n        pointBorderColor: \"transparent\",\r\n      },\r\n    ];\r\n    this.cardChart3Label = [\r\n      \"16-07-2018\",\r\n      \"17-07-2018\",\r\n      \"18-07-2018\",\r\n      \"19-07-2018\",\r\n      \"20-07-2018\",\r\n      \"21-07-2018\",\r\n      \"22-07-2018\",\r\n      \"23-07-2018\",\r\n      \"24-07-2018\",\r\n      \"25-07-2018\",\r\n      \"26-07-2018\",\r\n      \"27-07-2018\",\r\n      \"28-07-2018\",\r\n      \"29-07-2018\",\r\n      \"30-07-2018\",\r\n      \"31-07-2018\",\r\n    ];\r\n  }\r\n  private smallChart4() {\r\n    this.cardChart4 = {\r\n      responsive: true,\r\n      tooltips: {\r\n        enabled: false,\r\n      },\r\n      legend: {\r\n        display: false,\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            gridLines: {\r\n              display: false,\r\n              drawBorder: false,\r\n            },\r\n            ticks: {\r\n              beginAtZero: true,\r\n              display: false,\r\n            },\r\n          },\r\n        ],\r\n        xAxes: [\r\n          {\r\n            gridLines: {\r\n              drawBorder: false,\r\n              display: false,\r\n            },\r\n            ticks: {\r\n              display: false,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      title: {\r\n        display: false,\r\n      },\r\n    };\r\n    this.cardChart4Data = [\r\n      {\r\n        label: \"New Patients\",\r\n        data: [30, 45, 70, 40, 93, 63, 50, 62, 50, 61, 80, 50, 72, 52, 60, 41],\r\n        borderWidth: 4,\r\n        pointStyle: \"circle\",\r\n        pointRadius: 4,\r\n        borderColor: \"rgba(0,123,255,.7)\",\r\n        pointBackgroundColor: \"rgba(0,123,255,.2)\",\r\n        backgroundColor: \"rgba(0,123,255,.2)\",\r\n        pointBorderColor: \"transparent\",\r\n      },\r\n    ];\r\n    this.cardChart4Label = [\r\n      \"16-07-2018\",\r\n      \"17-07-2018\",\r\n      \"18-07-2018\",\r\n      \"19-07-2018\",\r\n      \"20-07-2018\",\r\n      \"21-07-2018\",\r\n      \"22-07-2018\",\r\n      \"23-07-2018\",\r\n      \"24-07-2018\",\r\n      \"25-07-2018\",\r\n      \"26-07-2018\",\r\n      \"27-07-2018\",\r\n      \"28-07-2018\",\r\n      \"29-07-2018\",\r\n      \"30-07-2018\",\r\n      \"31-07-2018\",\r\n    ];\r\n  }\r\n  private chart1() {\r\n    this.areaChartOptions = {\r\n      series: [\r\n        {\r\n          name: \"New Patients\",\r\n          data: [31, 40, 28, 51, 42, 85, 77],\r\n        },\r\n        {\r\n          name: \"Old Patients\",\r\n          data: [11, 32, 45, 32, 34, 52, 41],\r\n        },\r\n      ],\r\n      chart: {\r\n        height: 350,\r\n        type: \"area\",\r\n        toolbar: {\r\n          show: false,\r\n        },\r\n        foreColor: \"#9aa0ac\",\r\n      },\r\n      colors: [\"#407fe4\", \"#908e8e\"],\r\n      dataLabels: {\r\n        enabled: false,\r\n      },\r\n      stroke: {\r\n        curve: \"smooth\",\r\n      },\r\n      xaxis: {\r\n        type: \"datetime\",\r\n        categories: [\r\n          \"2018-09-19\",\r\n          \"2018-09-20\",\r\n          \"2018-09-21\",\r\n          \"2018-09-22\",\r\n          \"2018-09-23\",\r\n          \"2018-09-24\",\r\n          \"2018-09-25\",\r\n        ],\r\n      },\r\n      legend: {\r\n        show: true,\r\n        position: \"top\",\r\n        horizontalAlign: \"center\",\r\n        offsetX: 0,\r\n        offsetY: 0,\r\n      },\r\n\r\n      tooltip: {\r\n        theme: \"dark\",\r\n        marker: {\r\n          show: true,\r\n        },\r\n        x: {\r\n          show: true,\r\n        },\r\n      },\r\n    };\r\n  }\r\n  private chart2() {\r\n    this.barChartOptions = {\r\n      series: [\r\n        {\r\n          name: \"Colds and Flu\",\r\n          data: [44, 55, 41, 67, 22, 43],\r\n        },\r\n        {\r\n          name: \"Headaches\",\r\n          data: [13, 23, 20, 8, 13, 27],\r\n        },\r\n        {\r\n          name: \"Malaria\",\r\n          data: [11, 17, 15, 15, 21, 14],\r\n        },\r\n        {\r\n          name: \"Typhoid\",\r\n          data: [21, 7, 25, 13, 22, 8],\r\n        },\r\n      ],\r\n      chart: {\r\n        type: \"bar\",\r\n        height: 350,\r\n        foreColor: \"#9aa0ac\",\r\n        stacked: true,\r\n        toolbar: {\r\n          show: false,\r\n        },\r\n      },\r\n      responsive: [\r\n        {\r\n          breakpoint: 480,\r\n          options: {\r\n            legend: {\r\n              position: \"bottom\",\r\n              offsetX: -10,\r\n              offsetY: 0,\r\n            },\r\n          },\r\n        },\r\n      ],\r\n      plotOptions: {\r\n        bar: {\r\n          horizontal: false,\r\n          columnWidth: \"30%\",\r\n        },\r\n      },\r\n      dataLabels: {\r\n        enabled: false,\r\n      },\r\n      xaxis: {\r\n        type: \"category\",\r\n        categories: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\r\n      },\r\n      legend: {\r\n        show: false,\r\n      },\r\n      fill: {\r\n        opacity: 0.8,\r\n        colors: [\"#01B8AA\", \"#374649\", \"#FD625E\", \"#F2C80F\"],\r\n      },\r\n      tooltip: {\r\n        theme: \"dark\",\r\n        marker: {\r\n          show: true,\r\n        },\r\n        x: {\r\n          show: true,\r\n        },\r\n      },\r\n    };\r\n  }\r\n}\r\n"],"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AAuCjD,IAAaC,cAAc,GAA3B,MAAaA,cAAc;EAwBzBC,YACUC,WAAwB,EACxBC,IAAgB,EAChBC,WAAwB,EACxBC,MAAc,EACfC,MAAiB;IAJhB,KAAAJ,WAAW,GAAXA,WAAW;IACX,KAAAC,IAAI,GAAJA,IAAI;IACJ,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;IACP,KAAAC,MAAM,GAANA,MAAM;IAPf,KAAAC,oBAAoB,GAAY,KAAK;EASjC;EAEJC,QAAQA,CAAA;IACN,IAAI,CAACC,WAAW,EAAE;IAClB,IAAI,CAACC,WAAW,EAAE;IAClB,IAAI,CAACC,WAAW,EAAE;IAClB,IAAI,CAACC,WAAW,EAAE;IAClB,IAAI,CAACC,MAAM,EAAE;IACb,IAAI,CAACC,MAAM,EAAE;IAEb;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAGA,IAAIC,aAAa;IACjB;IACE;IACF;IACEA,aAAa,GAAG,KAAK;IACvB;EAEF;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEQN,WAAWA,CAAA;IACjB,IAAI,CAACO,UAAU,GAAG;MAChBC,UAAU,EAAE,IAAI;MAChBC,QAAQ,EAAE;QAC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"},"metadata":{},"sourceType":"module","externalDependencies":[]}