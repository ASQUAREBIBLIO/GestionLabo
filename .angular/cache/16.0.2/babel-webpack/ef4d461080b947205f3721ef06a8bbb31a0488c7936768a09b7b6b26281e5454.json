{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/ucaRech/uca-rech.service\";\nclass UcaRechComponent {\n  constructor(ucaRechservice) {\n    this.ucaRechservice = ucaRechservice;\n  }\n  ngOnInit() {\n    this.getucaRechs();\n  }\n  getucaRechs() {\n    this.ucaRechservice.getAllUcaRech().subscribe(response => {\n      this.ucaRechs = response;\n    }, error => {\n      console.log('Error fetching ucaRechs:', error);\n    });\n  }\n  createucaRech(ucaRech) {\n    this.ucaRechservice.createUcaRech(ucaRech).subscribe(response => {\n      console.log('Projet created successfully.');\n      // Refresh projets list\n      this.getucaRechs();\n    }, error => console.log(error));\n  }\n  updateucaRech(ucaRechId, ucaRech) {\n    this.ucaRechservice.updateUcaRech(ucaRechId, ucaRech).subscribe(response => {\n      console.log('Etablissement updated successfully.');\n      // Refresh projets list\n      this.getucaRechs();\n    }, error => console.log(error));\n  }\n  deleteucaRech(id) {\n    if (confirm('Are you sure you want to delete this ucaRech?')) {\n      this.ucaRechservice.deleteUcaRech(id).subscribe(() => {\n        this.getucaRechs();\n      }, error => {\n        console.log('Error deleting ucaRech:', error);\n      });\n    }\n  }\n}\nUcaRechComponent.ɵfac = function UcaRechComponent_Factory(t) {\n  return new (t || UcaRechComponent)(i0.ɵɵdirectiveInject(i1.UcaRechService));\n};\nUcaRechComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UcaRechComponent,\n  selectors: [[\"app-uca-rech\"]],\n  decls: 2,\n  vars: 0,\n  template: function UcaRechComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"uca-rech works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { UcaRechComponent };","map":{"version":3,"names":["UcaRechComponent","constructor","ucaRechservice","ngOnInit","getucaRechs","getAllUcaRech","subscribe","response","ucaRechs","error","console","log","createucaRech","ucaRech","createUcaRech","updateucaRech","ucaRechId","updateUcaRech","deleteucaRech","id","confirm","deleteUcaRech","i0","ɵɵdirectiveInject","i1","UcaRechService","selectors","decls","vars","template","UcaRechComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\ch\\Documents\\GitHub\\GestionLabo\\src\\app\\components\\uca-rech\\uca-rech.component.ts","C:\\Users\\ch\\Documents\\GitHub\\GestionLabo\\src\\app\\components\\uca-rech\\uca-rech.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { IUcaRech } from 'src/app/models/IUcaRech';\nimport { UcaRechService } from 'src/app/services/ucaRech/uca-rech.service';\n\n@Component({\n  selector: 'app-uca-rech',\n  templateUrl: './uca-rech.component.html',\n  styleUrls: ['./uca-rech.component.css']\n})\nexport class UcaRechComponent {\n  ucaRechs!: IUcaRech[];\n\n  constructor(private ucaRechservice: UcaRechService) { }\n\n  ngOnInit() {\n    this.getucaRechs();\n  }\n\n  getucaRechs() {\n    this.ucaRechservice.getAllUcaRech().subscribe(\n      response => {\n        this.ucaRechs = response;\n      },\n      error => {\n        console.log('Error fetching ucaRechs:', error);\n      }\n    );\n  }\n\n  createucaRech(ucaRech: IUcaRech) {\n    this.ucaRechservice.createUcaRech(ucaRech).subscribe(\n      response => {\n        console.log('Projet created successfully.');\n        // Refresh projets list\n        this.getucaRechs();\n      },\n      error => console.log(error)\n    );\n  }\n\n  updateucaRech(ucaRechId: number, ucaRech: IUcaRech) {\n    this.ucaRechservice.updateUcaRech(ucaRechId, ucaRech).subscribe(\n      response => {\n        console.log('Etablissement updated successfully.');\n        // Refresh projets list\n        this.getucaRechs();\n      },\n      error => console.log(error)\n    );\n  }\n\n  deleteucaRech(id: number) {\n    if (confirm('Are you sure you want to delete this ucaRech?')) {\n      this.ucaRechservice.deleteUcaRech(id).subscribe(\n        () => {\n          this.getucaRechs();\n        },\n        error => {\n          console.log('Error deleting ucaRech:', error);\n        }\n      );\n    }\n  }\n}\n","<p>uca-rech works!</p>\n"],"mappings":";;AAIA,MAKaA,gBAAgB;EAG3BC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;EAAoB;EAEtDC,QAAQA,CAAA;IACN,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAA,WAAWA,CAAA;IACT,IAAI,CAACF,cAAc,CAACG,aAAa,EAAE,CAACC,SAAS,CAC3CC,QAAQ,IAAG;MACT,IAAI,CAACC,QAAQ,GAAGD,QAAQ;IAC1B,CAAC,EACDE,KAAK,IAAG;MACNC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,KAAK,CAAC;IAChD,CAAC,CACF;EACH;EAEAG,aAAaA,CAACC,OAAiB;IAC7B,IAAI,CAACX,cAAc,CAACY,aAAa,CAACD,OAAO,CAAC,CAACP,SAAS,CAClDC,QAAQ,IAAG;MACTG,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC3C;MACA,IAAI,CAACP,WAAW,EAAE;IACpB,CAAC,EACDK,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAC5B;EACH;EAEAM,aAAaA,CAACC,SAAiB,EAAEH,OAAiB;IAChD,IAAI,CAACX,cAAc,CAACe,aAAa,CAACD,SAAS,EAAEH,OAAO,CAAC,CAACP,SAAS,CAC7DC,QAAQ,IAAG;MACTG,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;MAClD;MACA,IAAI,CAACP,WAAW,EAAE;IACpB,CAAC,EACDK,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAC5B;EACH;EAEAS,aAAaA,CAACC,EAAU;IACtB,IAAIC,OAAO,CAAC,+CAA+C,CAAC,EAAE;MAC5D,IAAI,CAAClB,cAAc,CAACmB,aAAa,CAACF,EAAE,CAAC,CAACb,SAAS,CAC7C,MAAK;QACH,IAAI,CAACF,WAAW,EAAE;MACpB,CAAC,EACDK,KAAK,IAAG;QACNC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,KAAK,CAAC;MAC/C,CAAC,CACF;;EAEL;;AArDWT,gBAAgB,C;mBAAhBA,gBAAgB,EAAAsB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA;AAAA;AAAhBzB,gBAAgB,C;QAAhBA,gBAAgB;EAAA0B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT7BT,EAAA,CAAAW,cAAA,QAAG;MAAAX,EAAA,CAAAY,MAAA,sBAAe;MAAAZ,EAAA,CAAAa,YAAA,EAAI;;;;;SDSTnC,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}