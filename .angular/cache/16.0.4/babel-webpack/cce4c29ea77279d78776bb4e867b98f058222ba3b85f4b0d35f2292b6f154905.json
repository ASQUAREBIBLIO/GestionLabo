{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/Auth/auth.service\";\nimport * as i2 from \"@angular/forms\";\nclass LoginComponent {\n  constructor(authService) {\n    this.authService = authService;\n  }\n  login() {\n    this.authService.login(this.email, this.password);\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 22,\n  vars: 3,\n  consts: [[3, \"ngSubmit\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"role\"], [\"id\", \"role\", \"name\", \"role\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"admin\"], [\"value\", \"directeur\"], [\"value\", \"membre\"], [\"value\", \"responsable-marche\"], [\"value\", \"responsable-finance\"], [\"type\", \"submit\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelementStart(1, \"label\", 1);\n      i0.ɵɵtext(2, \"Nom d'utilisateur:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.username = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"label\", 3);\n      i0.ɵɵtext(5, \"Mot de passe:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"label\", 5);\n      i0.ɵɵtext(8, \"R\\u00F4le:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"select\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_select_ngModelChange_9_listener($event) {\n        return ctx.role = $event;\n      });\n      i0.ɵɵelementStart(10, \"option\", 7);\n      i0.ɵɵtext(11, \"Admin\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"option\", 8);\n      i0.ɵɵtext(13, \"Directeur\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"option\", 9);\n      i0.ɵɵtext(15, \"Membre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"option\", 10);\n      i0.ɵɵtext(17, \"Responsable March\\u00E9\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"option\", 11);\n      i0.ɵɵtext(19, \"Responsable Finance\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"button\", 12);\n      i0.ɵɵtext(21, \"Se connecter\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.username);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.role);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { LoginComponent };","map":{"version":3,"names":["LoginComponent","constructor","authService","login","email","password","i0","ɵɵdirectiveInject","i1","AuthService","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","LoginComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","LoginComponent_Template_input_ngModelChange_3_listener","$event","username","LoginComponent_Template_input_ngModelChange_6_listener","LoginComponent_Template_select_ngModelChange_9_listener","role","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\ch\\Documents\\GitHub\\GestionLabo\\src\\app\\components\\login\\login.component.ts","C:\\Users\\ch\\Documents\\GitHub\\GestionLabo\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { AuthService } from '../../services/Auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n\r\n  email!: string;\r\n  password!: string;\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  login() {\r\n    this.authService.login(this.email, this.password);\r\n  }\r\n  // username!: string;\r\n  // password!: string;\r\n  // role!: string;\r\n\r\n  // constructor(private http: HttpClient, private authService: AuthService , private router: Router ) {}\r\n  \r\n\r\n  // login() {\r\n  //   const credentials = {\r\n  //     username: this.username,\r\n  //     password: this.password,\r\n  //     role: this.role\r\n  //   };\r\n\r\n  //   this.authService.login(credentials).subscribe(\r\n  //     response => {\r\n  //       // Gérer la réponse de connexion réussie\r\n  //       console.log('Connexion réussie');\r\n  //       // Rediriger vers le tableau de bord approprié en fonction du rôle\r\n  //       this.redirectToDashboard(this.role);\r\n  //     },\r\n  //     error => {\r\n  //       // Gérer l'erreur de connexion\r\n  //       console.error('Erreur de connexion', error);\r\n  //     }\r\n  //   );\r\n  // }\r\n\r\n  // redirectToDashboard(role: string) {\r\n  //   // Rediriger vers le tableau de bord approprié en fonction du rôle\r\n  //   let dashboardUrl = '';\r\n  \r\n  //   switch (role) {\r\n  //     case 'admin':\r\n  //       dashboardUrl = '/admin/dashboard';\r\n  //       break;\r\n  //     case 'directeur':\r\n  //       dashboardUrl = '/directeur/dashboard';\r\n  //       break;\r\n  //     case 'membre':\r\n  //       dashboardUrl = '/membre/dashboard';\r\n  //       break;\r\n  //     case 'responsable-marche':\r\n  //       dashboardUrl = '/responsable-marche/dashboard';\r\n  //       break;\r\n  //     case 'responsable-finance':\r\n  //       dashboardUrl = '/responsable-finance/dashboard';\r\n  //       break;\r\n  //     default:\r\n  //       // Redirection par défaut en cas de rôle non reconnu\r\n  //       dashboardUrl = '/login';\r\n  //       break;\r\n  //   }\r\n  \r\n  //   // Redirection vers le tableau de bord correspondant\r\n  //   this.router.navigate([dashboardUrl]);\r\n  // }\r\n}\r\n","<form (ngSubmit)=\"login()\">\r\n    <label for=\"username\">Nom d'utilisateur:</label>\r\n    <input type=\"text\" id=\"username\" name=\"username\" [(ngModel)]=\"username\">\r\n  \r\n    <label for=\"password\">Mot de passe:</label>\r\n    <input type=\"password\" id=\"password\" name=\"password\" [(ngModel)]=\"password\">\r\n  \r\n    <label for=\"role\">Rôle:</label>\r\n    <select id=\"role\" name=\"role\" [(ngModel)]=\"role\">\r\n      <option value=\"admin\">Admin</option>\r\n      <option value=\"directeur\">Directeur</option>\r\n      <option value=\"membre\">Membre</option>\r\n      <option value=\"responsable-marche\">Responsable Marché</option>\r\n      <option value=\"responsable-finance\">Responsable Finance</option>\r\n    </select>\r\n  \r\n    <button type=\"submit\">Se connecter</button>\r\n  </form>\r\n  "],"mappings":";;;AAGA,MAKaA,cAAc;EAKzBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;EAAgB;EAE/CC,KAAKA,CAAA;IACH,IAAI,CAACD,WAAW,CAACC,KAAK,CAAC,IAAI,CAACC,KAAK,EAAE,IAAI,CAACC,QAAQ,CAAC;EACnD;;AATWL,cAAc,C;mBAAdA,cAAc,EAAAM,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAdT,cAAc,C;QAAdA,cAAc;EAAAU,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR3BV,EAAA,CAAAY,cAAA,cAA2B;MAArBZ,EAAA,CAAAa,UAAA,sBAAAC,iDAAA;QAAA,OAAYH,GAAA,CAAAd,KAAA,EAAO;MAAA,EAAC;MACtBG,EAAA,CAAAY,cAAA,eAAsB;MAAAZ,EAAA,CAAAe,MAAA,yBAAkB;MAAAf,EAAA,CAAAgB,YAAA,EAAQ;MAChDhB,EAAA,CAAAY,cAAA,eAAwE;MAAvBZ,EAAA,CAAAa,UAAA,2BAAAI,uDAAAC,MAAA;QAAA,OAAAP,GAAA,CAAAQ,QAAA,GAAAD,MAAA;MAAA,EAAsB;MAAvElB,EAAA,CAAAgB,YAAA,EAAwE;MAExEhB,EAAA,CAAAY,cAAA,eAAsB;MAAAZ,EAAA,CAAAe,MAAA,oBAAa;MAAAf,EAAA,CAAAgB,YAAA,EAAQ;MAC3ChB,EAAA,CAAAY,cAAA,eAA4E;MAAvBZ,EAAA,CAAAa,UAAA,2BAAAO,uDAAAF,MAAA;QAAA,OAAAP,GAAA,CAAAZ,QAAA,GAAAmB,MAAA;MAAA,EAAsB;MAA3ElB,EAAA,CAAAgB,YAAA,EAA4E;MAE5EhB,EAAA,CAAAY,cAAA,eAAkB;MAAAZ,EAAA,CAAAe,MAAA,iBAAK;MAAAf,EAAA,CAAAgB,YAAA,EAAQ;MAC/BhB,EAAA,CAAAY,cAAA,gBAAiD;MAAnBZ,EAAA,CAAAa,UAAA,2BAAAQ,wDAAAH,MAAA;QAAA,OAAAP,GAAA,CAAAW,IAAA,GAAAJ,MAAA;MAAA,EAAkB;MAC9ClB,EAAA,CAAAY,cAAA,iBAAsB;MAAAZ,EAAA,CAAAe,MAAA,aAAK;MAAAf,EAAA,CAAAgB,YAAA,EAAS;MACpChB,EAAA,CAAAY,cAAA,iBAA0B;MAAAZ,EAAA,CAAAe,MAAA,iBAAS;MAAAf,EAAA,CAAAgB,YAAA,EAAS;MAC5ChB,EAAA,CAAAY,cAAA,iBAAuB;MAAAZ,EAAA,CAAAe,MAAA,cAAM;MAAAf,EAAA,CAAAgB,YAAA,EAAS;MACtChB,EAAA,CAAAY,cAAA,kBAAmC;MAAAZ,EAAA,CAAAe,MAAA,+BAAkB;MAAAf,EAAA,CAAAgB,YAAA,EAAS;MAC9DhB,EAAA,CAAAY,cAAA,kBAAoC;MAAAZ,EAAA,CAAAe,MAAA,2BAAmB;MAAAf,EAAA,CAAAgB,YAAA,EAAS;MAGlEhB,EAAA,CAAAY,cAAA,kBAAsB;MAAAZ,EAAA,CAAAe,MAAA,oBAAY;MAAAf,EAAA,CAAAgB,YAAA,EAAS;;;MAdMhB,EAAA,CAAAuB,SAAA,GAAsB;MAAtBvB,EAAA,CAAAwB,UAAA,YAAAb,GAAA,CAAAQ,QAAA,CAAsB;MAGlBnB,EAAA,CAAAuB,SAAA,GAAsB;MAAtBvB,EAAA,CAAAwB,UAAA,YAAAb,GAAA,CAAAZ,QAAA,CAAsB;MAG7CC,EAAA,CAAAuB,SAAA,GAAkB;MAAlBvB,EAAA,CAAAwB,UAAA,YAAAb,GAAA,CAAAW,IAAA,CAAkB;;;;;;SDAvC5B,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}