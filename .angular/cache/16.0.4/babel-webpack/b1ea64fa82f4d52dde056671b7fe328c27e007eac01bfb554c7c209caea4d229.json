{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass TypeBesoinService {\n  constructor(http) {\n    this.http = http;\n    this.expressionUrl = 'http://localhost:8082/typebesoins';\n  }\n  getAllTypeBesoin() {\n    return this.http.get(this.expressionUrl);\n  }\n  getTypeBesoinById(id) {\n    return this.http.get(`${this.expressionUrl}/${id}`);\n  }\n  createTypeBesoin(expression) {\n    return this.http.post(this.expressionUrl, expression);\n  }\n  /*updateExpressionBesoins(id: number, expression: ITypeBesoin): Observable<ITypeBesoin> {\n    return this.http.put<ITypeBesoin>(`${this.expressionUrl}/${id}`, expression);\n  }*/\n  updateTypeBesoin(expression) {\n    const url = `${this.expressionUrl}/${expression.type}`;\n    return this.http.put(url, expression);\n  }\n  deleteExpressionBesoins(id) {\n    return this.http.delete(`${this.expressionUrl}/${id}`);\n  }\n}\nTypeBesoinService.ɵfac = function TypeBesoinService_Factory(t) {\n  return new (t || TypeBesoinService)(i0.ɵɵinject(i1.HttpClient));\n};\nTypeBesoinService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TypeBesoinService,\n  factory: TypeBesoinService.ɵfac,\n  providedIn: 'root'\n});\nexport { TypeBesoinService };","map":{"version":3,"names":["TypeBesoinService","constructor","http","expressionUrl","getAllTypeBesoin","get","getTypeBesoinById","id","createTypeBesoin","expression","post","updateTypeBesoin","url","type","put","deleteExpressionBesoins","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ch\\Documents\\GitHub\\GestionLabo\\src\\app\\services\\typebesoin\\type-besoin.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ITypeBesoin } from 'src/app/models/ITypeBesoin';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TypeBesoinService {\r\n  private expressionUrl = 'http://localhost:8082/typebesoins';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllTypeBesoin(): Observable<ITypeBesoin[]> {\r\n    return this.http.get<ITypeBesoin[]>(this.expressionUrl);\r\n  }\r\n\r\n  getTypeBesoinById(id: number): Observable<ITypeBesoin> {\r\n    return this.http.get<ITypeBesoin>(`${this.expressionUrl}/${id}`);\r\n  }\r\n\r\n  createTypeBesoin(expression: ITypeBesoin): Observable<ITypeBesoin> {\r\n    return this.http.post<ITypeBesoin>(this.expressionUrl, expression);\r\n  }\r\n\r\n  /*updateExpressionBesoins(id: number, expression: ITypeBesoin): Observable<ITypeBesoin> {\r\n    return this.http.put<ITypeBesoin>(`${this.expressionUrl}/${id}`, expression);\r\n  }*/\r\n\r\n  updateTypeBesoin(expression: ITypeBesoin): Observable<any> {\r\n    const url = `${this.expressionUrl}/${expression.type}`;\r\n    return this.http.put(url, expression);\r\n  }\r\n\r\n  deleteExpressionBesoins(id: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.expressionUrl}/${id}`);\r\n  }\r\n}\r\n"],"mappings":";;AAKA,MAGaA,iBAAiB;EAG5BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,aAAa,GAAG,mCAAmC;EAEpB;EAEvCC,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAgB,IAAI,CAACF,aAAa,CAAC;EACzD;EAEAG,iBAAiBA,CAACC,EAAU;IAC1B,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAc,GAAG,IAAI,CAACF,aAAa,IAAII,EAAE,EAAE,CAAC;EAClE;EAEAC,gBAAgBA,CAACC,UAAuB;IACtC,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAc,IAAI,CAACP,aAAa,EAAEM,UAAU,CAAC;EACpE;EAEA;;;EAIAE,gBAAgBA,CAACF,UAAuB;IACtC,MAAMG,GAAG,GAAG,GAAG,IAAI,CAACT,aAAa,IAAIM,UAAU,CAACI,IAAI,EAAE;IACtD,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAACF,GAAG,EAAEH,UAAU,CAAC;EACvC;EAEAM,uBAAuBA,CAACR,EAAU;IAChC,OAAO,IAAI,CAACL,IAAI,CAACc,MAAM,CAAO,GAAG,IAAI,CAACb,aAAa,IAAII,EAAE,EAAE,CAAC;EAC9D;;AA5BWP,iBAAiB,C;mBAAjBA,iBAAiB,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAjBpB,iBAAiB,C;SAAjBA,iBAAiB;EAAAqB,OAAA,EAAjBrB,iBAAiB,CAAAsB,IAAA;EAAAC,UAAA,EAFhB;AAAM;SAEPvB,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}