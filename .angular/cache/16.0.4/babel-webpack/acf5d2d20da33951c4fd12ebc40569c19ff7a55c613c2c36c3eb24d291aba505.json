{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass AddexpressionComponent {}\nAddexpressionComponent.ɵfac = function AddexpressionComponent_Factory(t) {\n  return new (t || AddexpressionComponent)();\n};\nAddexpressionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddexpressionComponent,\n  selectors: [[\"app-addexpression\"]],\n  decls: 2,\n  vars: 0,\n  template: function AddexpressionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"addexpression works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { AddexpressionComponent };","map":{"version":3,"names":["AddexpressionComponent","selectors","decls","vars","template","AddexpressionComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\ch\\Documents\\GitHub\\GestionLabo\\src\\app\\components\\admins\\expressionsbesoin\\addexpression\\addexpression.component.ts","C:\\Users\\ch\\Documents\\GitHub\\GestionLabo\\src\\app\\components\\admins\\expressionsbesoin\\addexpression\\addexpression.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-addexpression',\r\n  templateUrl: './addexpression.component.html',\r\n  styleUrls: ['./addexpression.component.css']\r\n})\r\nexport class AddexpressionComponent {\r\n\r\n}\r\n","<p>addexpression works!</p>\r\n"],"mappings":";AAEA,MAKaA,sBAAsB;AAAtBA,sBAAsB,C;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB,C;QAAtBA,sBAAsB;EAAAC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCPnCE,EAAA,CAAAC,cAAA,QAAG;MAAAD,EAAA,CAAAE,MAAA,2BAAoB;MAAAF,EAAA,CAAAG,YAAA,EAAI;;;;;SDOdX,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}