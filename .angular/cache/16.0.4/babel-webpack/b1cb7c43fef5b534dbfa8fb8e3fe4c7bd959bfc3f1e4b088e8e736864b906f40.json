{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass LaboratoireService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8082/laboratoires'; // Replace with the actual API URL\n  }\n\n  getLaboratoires() {\n    return this.http.get(this.baseUrl);\n  }\n  getLaboratoireById(laboratoireId) {\n    const url = `${this.baseUrl}/${laboratoireId}`;\n    return this.http.get(url);\n  }\n  createLaboratoire(laboratoire) {\n    return this.http.post(this.baseUrl, laboratoire);\n  }\n  updateLaboratoire(laboratoire) {\n    const url = `${this.baseUrl}/${laboratoire.id}`;\n    return this.http.put(url, laboratoire);\n  }\n  deleteLaboratoire(laboratoireId) {\n    const url = `${this.baseUrl}/${laboratoireId}`;\n    return this.http.delete(url);\n  }\n}\nLaboratoireService.ɵfac = function LaboratoireService_Factory(t) {\n  return new (t || LaboratoireService)(i0.ɵɵinject(i1.HttpClient));\n};\nLaboratoireService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LaboratoireService,\n  factory: LaboratoireService.ɵfac,\n  providedIn: 'root'\n});\nexport { LaboratoireService };","map":{"version":3,"names":["LaboratoireService","constructor","http","baseUrl","getLaboratoires","get","getLaboratoireById","laboratoireId","url","createLaboratoire","laboratoire","post","updateLaboratoire","id","put","deleteLaboratoire","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ch\\Documents\\GitHub\\GestionLabo\\src\\app\\services\\laboratoire\\laboratoire.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ILaboratoire } from '../../models/ILaboratoire';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LaboratoireService {\r\n  private baseUrl = 'http://localhost:8082/laboratoires'; // Replace with the actual API URL\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getLaboratoires(): Observable<ILaboratoire[]> {\r\n    return this.http.get<ILaboratoire[]>(this.baseUrl);\r\n  }\r\n\r\n  getLaboratoireById(laboratoireId: number): Observable<ILaboratoire> {\r\n    const url = `${this.baseUrl}/${laboratoireId}`;\r\n    return this.http.get<ILaboratoire>(url);\r\n  }\r\n\r\n  createLaboratoire(laboratoire: ILaboratoire): Observable<any> {\r\n    return this.http.post(this.baseUrl, laboratoire);\r\n  }\r\n\r\n  updateLaboratoire(laboratoire: ILaboratoire): Observable<any> {\r\n    const url = `${this.baseUrl}/${laboratoire.id}`;\r\n    return this.http.put(url, laboratoire);\r\n  }\r\n\r\n  deleteLaboratoire(laboratoireId: number): Observable<any> {\r\n    const url = `${this.baseUrl}/${laboratoireId}`;\r\n    return this.http.delete(url);\r\n  }\r\n}\r\n"],"mappings":";;AAKA,MAGaA,kBAAkB;EAG7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,oCAAoC,CAAC,CAAC;EAEhB;;EAExCC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAiB,IAAI,CAACF,OAAO,CAAC;EACpD;EAEAG,kBAAkBA,CAACC,aAAqB;IACtC,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACL,OAAO,IAAII,aAAa,EAAE;IAC9C,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAeG,GAAG,CAAC;EACzC;EAEAC,iBAAiBA,CAACC,WAAyB;IACzC,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC,IAAI,CAACR,OAAO,EAAEO,WAAW,CAAC;EAClD;EAEAE,iBAAiBA,CAACF,WAAyB;IACzC,MAAMF,GAAG,GAAG,GAAG,IAAI,CAACL,OAAO,IAAIO,WAAW,CAACG,EAAE,EAAE;IAC/C,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAACN,GAAG,EAAEE,WAAW,CAAC;EACxC;EAEAK,iBAAiBA,CAACR,aAAqB;IACrC,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACL,OAAO,IAAII,aAAa,EAAE;IAC9C,OAAO,IAAI,CAACL,IAAI,CAACc,MAAM,CAACR,GAAG,CAAC;EAC9B;;AA1BWR,kBAAkB,C;mBAAlBA,kBAAkB,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAlBpB,kBAAkB,C;SAAlBA,kBAAkB;EAAAqB,OAAA,EAAlBrB,kBAAkB,CAAAsB,IAAA;EAAAC,UAAA,EAFjB;AAAM;SAEPvB,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}