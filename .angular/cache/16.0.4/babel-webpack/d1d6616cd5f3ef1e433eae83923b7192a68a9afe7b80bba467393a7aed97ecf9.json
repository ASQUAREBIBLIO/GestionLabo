{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/laboratoire/laboratoire.service\";\nimport * as i3 from \"src/app/services/etablissement/etablissement.service\";\nclass EditlaboComponent {\n  constructor(route, router, laboratoireService, etablissementService) {\n    this.route = route;\n    this.router = router;\n    this.laboratoireService = laboratoireService;\n    this.etablissementService = etablissementService;\n    this.etablissements = [];\n  }\n  ngOnInit() {\n    this.getLaboratoireById();\n    this.getEtablissements();\n  }\n  getLaboratoireById() {\n    const laboratoireId = this.route.snapshot.paramMap.get('id');\n    if (laboratoireId !== null) {\n      const id = Number(laboratoireId);\n      this.laboratoireService.getLaboratoireById(id).subscribe(laboratoire => {\n        this.laboratoire = laboratoire;\n      }, error => {\n        console.log(error);\n      });\n    }\n  }\n  getLaboratoire(laboratoireId) {\n    this.laboratoireService.getLaboratoireById(laboratoireId).subscribe(laboratoire => this.laboratoire = laboratoire, error => console.log(error));\n  }\n  updateLaboratoire() {\n    this.laboratoireService.updateLaboratoire(this.laboratoire).subscribe(response => {\n      console.log('laboratoire updated successfully.');\n      this.router.navigate(['/admin/dashboard/laboratoires']);\n      // Additional logic if needed\n    }, error => console.log(error));\n  }\n  getEtablissements() {\n    this.etablissementService.getEtablissements().subscribe(response => {\n      this.etablissements = response;\n    }, error => {\n      console.log('Error fetching admins:', error);\n    });\n  }\n}\nEditlaboComponent.ɵfac = function EditlaboComponent_Factory(t) {\n  return new (t || EditlaboComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.LaboratoireService), i0.ɵɵdirectiveInject(i3.EtablissementService));\n};\nEditlaboComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditlaboComponent,\n  selectors: [[\"app-editlabo\"]],\n  decls: 2,\n  vars: 0,\n  template: function EditlaboComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"editlabo works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { EditlaboComponent };","map":{"version":3,"names":["EditlaboComponent","constructor","route","router","laboratoireService","etablissementService","etablissements","ngOnInit","getLaboratoireById","getEtablissements","laboratoireId","snapshot","paramMap","get","id","Number","subscribe","laboratoire","error","console","log","getLaboratoire","updateLaboratoire","response","navigate","i0","ɵɵdirectiveInject","i1","ActivatedRoute","Router","i2","LaboratoireService","i3","EtablissementService","selectors","decls","vars","template","EditlaboComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\ch\\Documents\\GitHub\\GestionLabo\\src\\app\\components\\admins\\laboratoires\\editlabo\\editlabo.component.ts","C:\\Users\\ch\\Documents\\GitHub\\GestionLabo\\src\\app\\components\\admins\\laboratoires\\editlabo\\editlabo.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { IEtablissement } from 'src/app/models/IEtablissement';\r\nimport { ILaboratoire } from 'src/app/models/ILaboratoire';\r\nimport { EtablissementService } from 'src/app/services/etablissement/etablissement.service';\r\nimport { LaboratoireService } from 'src/app/services/laboratoire/laboratoire.service';\r\n\r\n@Component({\r\n  selector: 'app-editlabo',\r\n  templateUrl: './editlabo.component.html',\r\n  styleUrls: ['./editlabo.component.css']\r\n})\r\nexport class EditlaboComponent {\r\n  laboratoire!: ILaboratoire;\r\n  etablissements: IEtablissement[] = [];\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private laboratoireService: LaboratoireService,\r\n    private etablissementService: EtablissementService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getLaboratoireById();\r\n    this.getEtablissements();\r\n  }\r\n\r\n  getLaboratoireById(){\r\n    const laboratoireId = this.route.snapshot.paramMap.get('id');\r\n    if (laboratoireId !== null) {\r\n      const id = Number(laboratoireId);\r\n      this.laboratoireService.getLaboratoireById(id).subscribe(\r\n        laboratoire => {\r\n          this.laboratoire = laboratoire;\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  getLaboratoire(laboratoireId: number) {\r\n    this.laboratoireService.getLaboratoireById(laboratoireId).subscribe(\r\n      laboratoire => this.laboratoire = laboratoire,\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n  \r\n  updateLaboratoire() {\r\n    this.laboratoireService.updateLaboratoire(this.laboratoire).subscribe(\r\n      response => {\r\n        console.log('laboratoire updated successfully.');\r\n        this.router.navigate(['/admin/dashboard/laboratoires']);\r\n        // Additional logic if needed\r\n      },\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n  getEtablissements() {\r\n    this.etablissementService.getEtablissements().subscribe(\r\n      response => {\r\n       this.etablissements = response;\r\n      },\r\n      error => {\r\n        console.log('Error fetching admins:', error);\r\n      }\r\n    );\r\n  }\r\n  \r\n}\r\n","<p>editlabo works!</p>\r\n"],"mappings":";;;;AAOA,MAKaA,iBAAiB;EAI5BC,YACUC,KAAqB,EACrBC,MAAc,EACdC,kBAAsC,EACtCC,oBAA0C;IAH1C,KAAAH,KAAK,GAALA,KAAK;IACL,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,kBAAkB,GAAlBA,kBAAkB;IAClB,KAAAC,oBAAoB,GAApBA,oBAAoB;IAN9B,KAAAC,cAAc,GAAqB,EAAE;EAOjC;EAEJC,QAAQA,CAAA;IACN,IAAI,CAACC,kBAAkB,EAAE;IACzB,IAAI,CAACC,iBAAiB,EAAE;EAC1B;EAEAD,kBAAkBA,CAAA;IAChB,MAAME,aAAa,GAAG,IAAI,CAACR,KAAK,CAACS,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAC5D,IAAIH,aAAa,KAAK,IAAI,EAAE;MAC1B,MAAMI,EAAE,GAAGC,MAAM,CAACL,aAAa,CAAC;MAChC,IAAI,CAACN,kBAAkB,CAACI,kBAAkB,CAACM,EAAE,CAAC,CAACE,SAAS,CACtDC,WAAW,IAAG;QACZ,IAAI,CAACA,WAAW,GAAGA,WAAW;MAChC,CAAC,EACDC,KAAK,IAAG;QACNC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB,CAAC,CACF;;EAEL;EAEAG,cAAcA,CAACX,aAAqB;IAClC,IAAI,CAACN,kBAAkB,CAACI,kBAAkB,CAACE,aAAa,CAAC,CAACM,SAAS,CACjEC,WAAW,IAAI,IAAI,CAACA,WAAW,GAAGA,WAAW,EAC7CC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAC5B;EACH;EAGAI,iBAAiBA,CAAA;IACf,IAAI,CAAClB,kBAAkB,CAACkB,iBAAiB,CAAC,IAAI,CAACL,WAAW,CAAC,CAACD,SAAS,CACnEO,QAAQ,IAAG;MACTJ,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;MAChD,IAAI,CAACjB,MAAM,CAACqB,QAAQ,CAAC,CAAC,+BAA+B,CAAC,CAAC;MACvD;IACF,CAAC,EACDN,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAC5B;EACH;EAEAT,iBAAiBA,CAAA;IACf,IAAI,CAACJ,oBAAoB,CAACI,iBAAiB,EAAE,CAACO,SAAS,CACrDO,QAAQ,IAAG;MACV,IAAI,CAACjB,cAAc,GAAGiB,QAAQ;IAC/B,CAAC,EACDL,KAAK,IAAG;MACNC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,KAAK,CAAC;IAC9C,CAAC,CACF;EACH;;AA3DWlB,iBAAiB,C;mBAAjBA,iBAAiB,EAAAyB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAE,MAAA,GAAAJ,EAAA,CAAAC,iBAAA,CAAAI,EAAA,CAAAC,kBAAA,GAAAN,EAAA,CAAAC,iBAAA,CAAAM,EAAA,CAAAC,oBAAA;AAAA;AAAjBjC,iBAAiB,C;QAAjBA,iBAAiB;EAAAkC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCZ9Bd,EAAA,CAAAgB,cAAA,QAAG;MAAAhB,EAAA,CAAAiB,MAAA,sBAAe;MAAAjB,EAAA,CAAAkB,YAAA,EAAI;;;;;SDYT3C,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}