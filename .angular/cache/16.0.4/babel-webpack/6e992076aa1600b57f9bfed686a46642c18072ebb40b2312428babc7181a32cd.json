{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/Auth/auth.service\";\nimport * as i2 from \"@angular/forms\";\nclass LoginComponent {\n  constructor(authService) {\n    this.authService = authService;\n  }\n  login() {\n    this.authService.login(this.email, this.password);\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 11,\n  vars: 2,\n  consts: [[3, \"ngSubmit\"], [\"type\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelementStart(1, \"div\")(2, \"label\");\n      i0.ɵɵtext(3, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\")(6, \"label\");\n      i0.ɵɵtext(7, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"button\", 3);\n      i0.ɵɵtext(10, \"Login\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { LoginComponent };","map":{"version":3,"names":["LoginComponent","constructor","authService","login","email","password","i0","ɵɵdirectiveInject","i1","AuthService","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","LoginComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","LoginComponent_Template_input_ngModelChange_4_listener","$event","LoginComponent_Template_input_ngModelChange_8_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\ch\\Documents\\GitHub\\GestionLabo\\src\\app\\components\\login\\login.component.ts","C:\\Users\\ch\\Documents\\GitHub\\GestionLabo\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { AuthService } from '../../services/Auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n\r\n  email!: string;\r\n  password!: string;\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  login() {\r\n    this.authService.login(this.email, this.password);\r\n    \r\n  }\r\n  // username!: string;\r\n  // password!: string;\r\n  // role!: string;\r\n\r\n  // constructor(private http: HttpClient, private authService: AuthService , private router: Router ) {}\r\n  \r\n\r\n  // login() {\r\n  //   const credentials = {\r\n  //     username: this.username,\r\n  //     password: this.password,\r\n  //     role: this.role\r\n  //   };\r\n\r\n  //   this.authService.login(credentials).subscribe(\r\n  //     response => {\r\n  //       // Gérer la réponse de connexion réussie\r\n  //       console.log('Connexion réussie');\r\n  //       // Rediriger vers le tableau de bord approprié en fonction du rôle\r\n  //       this.redirectToDashboard(this.role);\r\n  //     },\r\n  //     error => {\r\n  //       // Gérer l'erreur de connexion\r\n  //       console.error('Erreur de connexion', error);\r\n  //     }\r\n  //   );\r\n  // }\r\n\r\n  // redirectToDashboard(role: string) {\r\n  //   // Rediriger vers le tableau de bord approprié en fonction du rôle\r\n  //   let dashboardUrl = '';\r\n  \r\n  //   switch (role) {\r\n  //     case 'admin':\r\n  //       dashboardUrl = '/admin/dashboard';\r\n  //       break;\r\n  //     case 'directeur':\r\n  //       dashboardUrl = '/directeur/dashboard';\r\n  //       break;\r\n  //     case 'membre':\r\n  //       dashboardUrl = '/membre/dashboard';\r\n  //       break;\r\n  //     case 'responsable-marche':\r\n  //       dashboardUrl = '/responsable-marche/dashboard';\r\n  //       break;\r\n  //     case 'responsable-finance':\r\n  //       dashboardUrl = '/responsable-finance/dashboard';\r\n  //       break;\r\n  //     default:\r\n  //       // Redirection par défaut en cas de rôle non reconnu\r\n  //       dashboardUrl = '/login';\r\n  //       break;\r\n  //   }\r\n  \r\n  //   // Redirection vers le tableau de bord correspondant\r\n  //   this.router.navigate([dashboardUrl]);\r\n  // }\r\n}\r\n","<form (ngSubmit)=\"login()\">\r\n  <div>\r\n    <label>Email:</label>\r\n    <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" required>\r\n  </div>\r\n  <div>\r\n    <label>Password:</label>\r\n    <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" required>\r\n  </div>\r\n  <button type=\"submit\">Login</button>\r\n</form>"],"mappings":";;;AAGA,MAKaA,cAAc;EAKzBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;EAAgB;EAE/CC,KAAKA,CAAA;IACH,IAAI,CAACD,WAAW,CAACC,KAAK,CAAC,IAAI,CAACC,KAAK,EAAE,IAAI,CAACC,QAAQ,CAAC;EAEnD;;AAVWL,cAAc,C;mBAAdA,cAAc,EAAAM,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAdT,cAAc,C;QAAdA,cAAc;EAAAU,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR3BV,EAAA,CAAAY,cAAA,cAA2B;MAArBZ,EAAA,CAAAa,UAAA,sBAAAC,iDAAA;QAAA,OAAYH,GAAA,CAAAd,KAAA,EAAO;MAAA,EAAC;MACxBG,EAAA,CAAAY,cAAA,UAAK;MACIZ,EAAA,CAAAe,MAAA,aAAM;MAAAf,EAAA,CAAAgB,YAAA,EAAQ;MACrBhB,EAAA,CAAAY,cAAA,eAA8D;MAA1CZ,EAAA,CAAAa,UAAA,2BAAAI,uDAAAC,MAAA;QAAA,OAAAP,GAAA,CAAAb,KAAA,GAAAoB,MAAA;MAAA,EAAmB;MAAvClB,EAAA,CAAAgB,YAAA,EAA8D;MAEhEhB,EAAA,CAAAY,cAAA,UAAK;MACIZ,EAAA,CAAAe,MAAA,gBAAS;MAAAf,EAAA,CAAAgB,YAAA,EAAQ;MACxBhB,EAAA,CAAAY,cAAA,eAAuE;MAAhDZ,EAAA,CAAAa,UAAA,2BAAAM,uDAAAD,MAAA;QAAA,OAAAP,GAAA,CAAAZ,QAAA,GAAAmB,MAAA;MAAA,EAAsB;MAA7ClB,EAAA,CAAAgB,YAAA,EAAuE;MAEzEhB,EAAA,CAAAY,cAAA,gBAAsB;MAAAZ,EAAA,CAAAe,MAAA,aAAK;MAAAf,EAAA,CAAAgB,YAAA,EAAS;;;MANdhB,EAAA,CAAAoB,SAAA,GAAmB;MAAnBpB,EAAA,CAAAqB,UAAA,YAAAV,GAAA,CAAAb,KAAA,CAAmB;MAIhBE,EAAA,CAAAoB,SAAA,GAAsB;MAAtBpB,EAAA,CAAAqB,UAAA,YAAAV,GAAA,CAAAZ,QAAA,CAAsB;;;;;;SDCpCL,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}