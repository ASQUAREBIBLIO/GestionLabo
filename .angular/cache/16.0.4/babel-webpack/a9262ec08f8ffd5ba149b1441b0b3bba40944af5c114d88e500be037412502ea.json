{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../Auth/auth.service\";\nimport * as i2 from \"@angular/router\";\nclass DirectorGuardService {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate() {\n    if (this.authService.isLoggedIn() && this.authService.isDirector()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\nDirectorGuardService.ɵfac = function DirectorGuardService_Factory(t) {\n  return new (t || DirectorGuardService)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\nDirectorGuardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DirectorGuardService,\n  factory: DirectorGuardService.ɵfac,\n  providedIn: 'root'\n});\nexport { DirectorGuardService };","map":{"version":3,"names":["DirectorGuardService","constructor","authService","router","canActivate","isLoggedIn","isDirector","navigate","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Asus ROG\\Documents\\GitHub\\GestionLabo\\src\\app\\services\\direcorGuard\\director-guard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AuthService } from '../Auth/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DirectorGuardService implements CanActivate {\r\n\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  canActivate(): boolean {\r\n    if (this.authService.isLoggedIn() && this.authService.isDirector()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n"],"mappings":";;;AAIA,MAGaA,oBAAoB;EAE/BC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEvEC,WAAWA,CAAA;IACT,IAAI,IAAI,CAACF,WAAW,CAACG,UAAU,EAAE,IAAI,IAAI,CAACH,WAAW,CAACI,UAAU,EAAE,EAAE;MAClE,OAAO,IAAI;KACZ,MAAM;MACL,IAAI,CAACH,MAAM,CAACI,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK;;EAEhB;;AAXWP,oBAAoB,C;mBAApBA,oBAAoB,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;AAApBb,oBAAoB,C;SAApBA,oBAAoB;EAAAc,OAAA,EAApBd,oBAAoB,CAAAe,IAAA;EAAAC,UAAA,EAFnB;AAAM;SAEPhB,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}