{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AdminComponent = class AdminComponent {\n  constructor(adminService, etablissementService, membreService, laboratoireService, router) {\n    this.adminService = adminService;\n    this.etablissementService = etablissementService;\n    this.membreService = membreService;\n    this.laboratoireService = laboratoireService;\n    this.router = router;\n    //Post\n    this.etablissement = {\n      nom: '',\n      ville: '',\n      adresse: ''\n    };\n    this.laboratoire = {\n      nomLabo: '',\n      etablissement: {\n        id: undefined\n      }\n    };\n  }\n  ngOnInit() {\n    this.getAdmins();\n    this.getEtablissements();\n    this.getMembres();\n    this.getLaboratoires();\n  }\n  getMembres() {\n    this.membreService.getAllMembres().subscribe(response => {\n      this.membres = response;\n    }, error => {\n      console.log('Error fetching admins:', error);\n    });\n  }\n  getLaboratoires() {\n    this.laboratoireService.getLaboratoires().subscribe(response => {\n      this.laboratoires = response;\n    }, error => {\n      console.log('Error fetching admins:', error);\n    });\n  }\n  createLaboratoire() {\n    this.laboratoireService.createLaboratoire(this.laboratoire).subscribe(response => {\n      console.log('Etablissement created successfully.');\n    }, error => console.log(error));\n  }\n  getLaboratoireById(laboratoireId) {\n    this.laboratoireService.getLaboratoireById(laboratoireId).subscribe(response => {\n      this.laboratoire = response;\n    }, error => {\n      console.log('Error fetching laboratory:', error);\n    });\n  }\n  OpenEtablissementDetailsModal(etablissement) {\n    this.SelectedEtablissement = etablissement;\n  }\n  OpenLaboratoireDetailsModal(laboratoire) {\n    this.SelectedLaboratoire = laboratoire;\n  }\n  OpenMembreDetailsModal(membre) {\n    this.SelectedMembre = membre;\n  }\n  getNbreOfMembers(laboratoire) {\n    return laboratoire.membres?.length;\n  }\n  getEtablissements() {\n    this.etablissementService.getEtablissements().subscribe(response => {\n      this.etablissements = response;\n    }, error => {\n      console.log('Error fetching admins:', error);\n    });\n  }\n  createEtablissement() {\n    this.etablissementService.createEtablissement(this.etablissement).subscribe(response => {\n      console.log('Etablissement created successfully.');\n      // Additional logic if needed\n      this.router.navigate(['admin/dashboard']);\n    }, error => console.log(error));\n  }\n  getAdmins() {\n    this.adminService.getAllAdmins().subscribe(response => {\n      this.admins = response;\n    }, error => {\n      console.log('Error fetching admins:', error);\n    });\n  }\n  createAdmin(membre) {\n    this.adminService.createAdmin(membre).subscribe(response => {\n      console.log('Projet created successfully.');\n      // Refresh projets list\n      this.getAdmins();\n    }, error => console.log(error));\n  }\n  updateAdmin(membreId, admin) {\n    this.adminService.updateAdmin(membreId, admin).subscribe(response => {\n      console.log('Etablissement updated successfully.');\n      // Refresh projets list\n      this.getAdmins();\n    }, error => console.log(error));\n  }\n  deleteAdmin(id) {\n    if (confirm('Are you sure you want to delete this membre?')) {\n      this.adminService.deleteAdmin(id).subscribe(() => {\n        this.getAdmins();\n      }, error => {\n        console.log('Error deleting adÃ¹in:', error);\n      });\n    }\n  }\n};\nAdminComponent = __decorate([Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['../../../vendors/styles/style.css', '../../../srctemplate/plugins/datatables/css/dataTables.bootstrap4.min.css', '../../../vendors/styles/core.css', '../../../vendors/styles/icon-font.min.css']\n})], AdminComponent);\nexport { AdminComponent };","map":{"version":3,"names":["Component","AdminComponent","constructor","adminService","etablissementService","membreService","laboratoireService","router","etablissement","nom","ville","adresse","laboratoire","nomLabo","id","undefined","ngOnInit","getAdmins","getEtablissements","getMembres","getLaboratoires","getAllMembres","subscribe","response","membres","error","console","log","laboratoires","createLaboratoire","getLaboratoireById","laboratoireId","OpenEtablissementDetailsModal","SelectedEtablissement","OpenLaboratoireDetailsModal","SelectedLaboratoire","OpenMembreDetailsModal","membre","SelectedMembre","getNbreOfMembers","length","etablissements","createEtablissement","navigate","getAllAdmins","admins","createAdmin","updateAdmin","membreId","admin","deleteAdmin","confirm","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\ch\\Documents\\GitHub\\GestionLabo\\src\\app\\components\\admins\\admin\\admin.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { IAdmin } from 'src/app/models/IAdmin';\r\nimport {IEtablissement} from 'src/app/models/IEtablissement'\r\nimport { ILaboratoire } from 'src/app/models/ILaboratoire';\r\nimport { IMembre } from 'src/app/models/IMembre';\r\nimport { AdminService } from 'src/app/services/admin/admin.service';\r\nimport { EtablissementService } from 'src/app/services/etablissement/etablissement.service';\r\nimport { LaboratoireService } from 'src/app/services/laboratoire/laboratoire.service';\r\nimport { MembreService } from 'src/app/services/membre/membre.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['../../../vendors/styles/style.css', '../../../srctemplate/plugins/datatables/css/dataTables.bootstrap4.min.css','../../../vendors/styles/core.css','../../../vendors/styles/icon-font.min.css'],\r\n  \r\n\r\n})\r\nexport class AdminComponent {\r\n  admins!: IAdmin[];\r\n  etablissements!: IEtablissement[];\r\n  membres!: IMembre[];\r\n  laboratoires!: ILaboratoire[];\r\n\r\n  //Post\r\n  etablissement: IEtablissement = {\r\n    nom: '',\r\n    ville: '',\r\n    adresse: ''\r\n  }\r\n  laboratoire: ILaboratoire = {\r\n    nomLabo: '',\r\n    etablissement: {\r\n     id: undefined\r\n    }\r\n  }\r\n\r\n  //By id\r\n  SelectedLaboratoire!: ILaboratoire;\r\n  SelectedEtablissement!: IEtablissement;\r\n  SelectedMembre!: IMembre;\r\n\r\n\r\n  photo1: any;\r\n  assets: any;\r\n  images: any;\r\n\r\n\r\n\r\n  constructor(private adminService: AdminService, \r\n    private etablissementService: EtablissementService,\r\n    private membreService: MembreService,\r\n    private laboratoireService: LaboratoireService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getAdmins();\r\n    this.getEtablissements();\r\n    this.getMembres();\r\n    this.getLaboratoires();\r\n  }\r\n\r\n  getMembres() {\r\n    this.membreService.getAllMembres().subscribe(\r\n      response => {\r\n        this.membres = response;\r\n      },\r\n      error => {\r\n        console.log('Error fetching admins:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  getLaboratoires() {\r\n    this.laboratoireService.getLaboratoires().subscribe(\r\n      response => {\r\n        this.laboratoires = response;\r\n      },\r\n      error => {\r\n        console.log('Error fetching admins:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  createLaboratoire() {\r\n    this.laboratoireService.createLaboratoire(this.laboratoire).subscribe(\r\n      response => {\r\n        console.log('Etablissement created successfully.');\r\n        \r\n      },\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n  getLaboratoireById(laboratoireId: number){\r\n    this.laboratoireService.getLaboratoireById(laboratoireId).subscribe(\r\n      response => {\r\n        this.laboratoire = response;\r\n      },\r\n      error => {\r\n        console.log('Error fetching laboratory:', error);\r\n      }\r\n    )\r\n  }\r\n\r\n  OpenEtablissementDetailsModal(etablissement: IEtablissement){\r\n    this.SelectedEtablissement = etablissement;\r\n  }\r\n\r\n  OpenLaboratoireDetailsModal(laboratoire: ILaboratoire){\r\n    this.SelectedLaboratoire = laboratoire;\r\n  }\r\n  OpenMembreDetailsModal(membre: IMembre){\r\n    this.SelectedMembre = membre;\r\n  }\r\n\r\n  getNbreOfMembers(laboratoire: ILaboratoire): number | undefined{\r\n    return laboratoire.membres?.length;\r\n  }\r\n\r\n  getEtablissements() {\r\n    this.etablissementService.getEtablissements().subscribe(\r\n      response => {\r\n        this.etablissements = response;\r\n      },\r\n      error => {\r\n        console.log('Error fetching admins:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  createEtablissement() {\r\n    this.etablissementService.createEtablissement(this.etablissement).subscribe(\r\n      response => {\r\n        console.log('Etablissement created successfully.');\r\n        // Additional logic if needed\r\n        this.router.navigate(['admin/dashboard']);\r\n      },\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n  getAdmins() {\r\n    this.adminService.getAllAdmins().subscribe(\r\n      response => {\r\n        this.admins = response;\r\n      },\r\n      error => {\r\n        console.log('Error fetching admins:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  createAdmin(membre: IAdmin) {\r\n    this.adminService.createAdmin(membre).subscribe(\r\n      response => {\r\n        console.log('Projet created successfully.');\r\n        // Refresh projets list\r\n        this.getAdmins();\r\n      },\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n  updateAdmin(membreId: number, admin: IAdmin) {\r\n    this.adminService.updateAdmin(membreId, admin).subscribe(\r\n      response => {\r\n        console.log('Etablissement updated successfully.');\r\n        // Refresh projets list\r\n        this.getAdmins();\r\n      },\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n  deleteAdmin(id: number) {\r\n    if (confirm('Are you sure you want to delete this membre?')) {\r\n      this.adminService.deleteAdmin(id).subscribe(\r\n        () => {\r\n          this.getAdmins();\r\n        },\r\n        error => {\r\n          console.log('Error deleting adÃ¹in:', error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}