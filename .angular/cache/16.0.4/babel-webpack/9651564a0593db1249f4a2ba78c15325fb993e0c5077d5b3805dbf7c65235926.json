{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/Auth/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nclass LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  login() {\n    this.authService.login(this.email, this.password).subscribe(response => {\n      this.authService.handleLoginResponse(response);\n      if (this.authService.isAdmin()) {\n        this.router.navigate(['/admin/dashboard']);\n      } else if (this.authService.isMember()) {\n        this.router.navigate(['/membre/dashboard']);\n      }\n    }, error => {\n      console.log(error);\n      // Handle login error\n    });\n  }\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 16,\n  vars: 2,\n  consts: [[1, \"login\"], [1, \"login0\\u00E7\"], [1, \"login__header\"], [1, \"login__form\", 3, \"ngSubmit\"], [\"for\", \"email\"], [\"type\", \"email\", \"name\", \"email\", \"placeholder\", \"xyz@gmail.com\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"name\", \"password\", \"placeholder\", \"********\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", \"value\", \"Connexion\", 1, \"button\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"header\", 2)(3, \"h3\");\n      i0.ɵɵtext(4, \"LOGIN\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelementStart(6, \"div\")(7, \"label\", 4);\n      i0.ɵɵtext(8, \"Adresse email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\")(11, \"label\", 6);\n      i0.ɵɵtext(12, \"Mot de passe\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\");\n      i0.ɵɵelement(15, \"input\", 8);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\"*[_ngcontent-%COMP%] {\\r\\n    box-sizing: inherit;\\r\\n  }\\r\\n  \\r\\n  \\r\\n  \\r\\n  .button[_ngcontent-%COMP%] {\\r\\n    background-color: rgba(167, 42, 42, 0.764);\\r\\n    color: #fff;\\r\\n    padding: 10px 15px;\\r\\n  }\\r\\n  \\r\\n  .button[_ngcontent-%COMP%]:focus, .button[_ngcontent-%COMP%]:hover {\\r\\n    background-color: rgba(122, 64, 64, 0.764);\\r\\n  }\\r\\n\\r\\n  \\r\\n  \\r\\n  .login[_ngcontent-%COMP%] {\\r\\n    width: 600px;\\r\\n    height: 100vh;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    background-color: rgb(42, 29, 68);\\r\\n  }\\r\\n  \\r\\n  .login__header[_ngcontent-%COMP%] {\\r\\n    background-color: rgba(167, 42, 42, 0.764);\\r\\n    border-top-left-radius: 1.25em;\\r\\n    border-top-right-radius: 1.25em;\\r\\n    color: #fff;\\r\\n    padding: 1.25em 1.625em;\\r\\n  }\\r\\n  \\r\\n  .login__header[_ngcontent-%COMP%]   [_ngcontent-%COMP%]:first-child {\\r\\n    margin-top: 0;\\r\\n  }\\r\\n  \\r\\n  .login__header[_ngcontent-%COMP%]   [_ngcontent-%COMP%]:last-child {\\r\\n    margin-bottom: 0;\\r\\n  }\\r\\n\\r\\n  .login__form[_ngcontent-%COMP%] {\\r\\n    background-color: #fff;\\r\\n    border-bottom-left-radius: 1.25em;\\r\\n    border-bottom-right-radius: 1.25em;\\r\\n    color: #777;\\r\\n    display: grid;\\r\\n    gap: 0.875em;\\r\\n    padding: 1.25em 1.625em;\\r\\n  }\\r\\n  \\r\\n  .login[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\r\\n    border-radius: 5px;\\r\\n  }\\r\\n  \\r\\n  .login[_ngcontent-%COMP%]   input[type=\\\"email\\\"][_ngcontent-%COMP%], .login[_ngcontent-%COMP%]   input[type=\\\"password\\\"][_ngcontent-%COMP%] {\\r\\n    background-color: #eee;\\r\\n    color: #777;\\r\\n    padding: 10px 15px;\\r\\n    width: 100%;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7RUFDRSxrQ0FBa0M7RUFDbEM7SUFDRSxtQkFBbUI7RUFDckI7O0VBRUEsaUNBQWlDOztFQUVqQztJQUNFLDBDQUEwQztJQUMxQyxXQUFXO0lBQ1gsa0JBQWtCO0VBQ3BCOztFQUVBOztJQUVFLDBDQUEwQztFQUM1Qzs7O0VBR0EsZ0NBQWdDO0VBQ2hDO0lBQ0UsWUFBWTtJQUNaLGFBQWE7SUFDYixhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixpQ0FBaUM7RUFDbkM7O0VBRUE7SUFDRSwwQ0FBMEM7SUFDMUMsOEJBQThCO0lBQzlCLCtCQUErQjtJQUMvQixXQUFXO0lBQ1gsdUJBQXVCO0VBQ3pCOztFQUVBO0lBQ0UsYUFBYTtFQUNmOztFQUVBO0lBQ0UsZ0JBQWdCO0VBQ2xCOztFQUVBO0lBQ0Usc0JBQXNCO0lBQ3RCLGlDQUFpQztJQUNqQyxrQ0FBa0M7SUFDbEMsV0FBVztJQUNYLGFBQWE7SUFDYixZQUFZO0lBQ1osdUJBQXVCO0VBQ3pCOztFQUVBO0lBQ0Usa0JBQWtCO0VBQ3BCOztFQUVBOztJQUVFLHNCQUFzQjtJQUN0QixXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLFdBQVc7RUFDYiIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4gIC8qIC0tLS0tLS0tLS0gR0VORVJBTCAtLS0tLS0tLS0tICovXHJcbiAgKiB7XHJcbiAgICBib3gtc2l6aW5nOiBpbmhlcml0O1xyXG4gIH1cclxuICBcclxuICAvKiAtLS0tLS0tLS0tIEJVVFRPTiAtLS0tLS0tLS0tICovXHJcbiAgXHJcbiAgLmJ1dHRvbiB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE2NywgNDIsIDQyLCAwLjc2NCk7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIHBhZGRpbmc6IDEwcHggMTVweDtcclxuICB9XHJcbiAgXHJcbiAgLmJ1dHRvbjpmb2N1cyxcclxuICAuYnV0dG9uOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTIyLCA2NCwgNjQsIDAuNzY0KTtcclxuICB9XHJcblxyXG4gIFxyXG4gIC8qIC0tLS0tLS0tLS0gTE9HSU4gLS0tLS0tLS0tLSAqL1xyXG4gIC5sb2dpbiB7XHJcbiAgICB3aWR0aDogNjAwcHg7XHJcbiAgICBoZWlnaHQ6IDEwMHZoO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig0MiwgMjksIDY4KTtcclxuICB9XHJcbiAgXHJcbiAgLmxvZ2luX19oZWFkZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxNjcsIDQyLCA0MiwgMC43NjQpO1xyXG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMS4yNWVtO1xyXG4gICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDEuMjVlbTtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgcGFkZGluZzogMS4yNWVtIDEuNjI1ZW07XHJcbiAgfVxyXG4gIFxyXG4gIC5sb2dpbl9faGVhZGVyIDpmaXJzdC1jaGlsZCB7XHJcbiAgICBtYXJnaW4tdG9wOiAwO1xyXG4gIH1cclxuICBcclxuICAubG9naW5fX2hlYWRlciA6bGFzdC1jaGlsZCB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gIH1cclxuXHJcbiAgLmxvZ2luX19mb3JtIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAxLjI1ZW07XHJcbiAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMS4yNWVtO1xyXG4gICAgY29sb3I6ICM3Nzc7XHJcbiAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgZ2FwOiAwLjg3NWVtO1xyXG4gICAgcGFkZGluZzogMS4yNWVtIDEuNjI1ZW07XHJcbiAgfVxyXG4gIFxyXG4gIC5sb2dpbiBpbnB1dCB7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5sb2dpbiBpbnB1dFt0eXBlPVwiZW1haWxcIl0sXHJcbiAgLmxvZ2luIGlucHV0W3R5cGU9XCJwYXNzd29yZFwiXSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlO1xyXG4gICAgY29sb3I6ICM3Nzc7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDE1cHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { LoginComponent };","map":{"version":3,"names":["LoginComponent","constructor","authService","router","login","email","password","subscribe","response","handleLoginResponse","isAdmin","navigate","isMember","error","console","log","i0","ɵɵdirectiveInject","i1","AuthService","i2","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_5_listener","LoginComponent_Template_input_ngModelChange_9_listener","$event","LoginComponent_Template_input_ngModelChange_13_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\ch\\Documents\\GitHub\\GestionLabo\\src\\app\\components\\login\\login.component.ts","C:\\Users\\ch\\Documents\\GitHub\\GestionLabo\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { AuthService } from '../../services/Auth/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n\r\n  email!: string;\r\n  password!: string;\r\n  \r\n\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  login() {\r\n    this.authService.login(this.email, this.password).subscribe(\r\n      (response: any) => {\r\n        this.authService.handleLoginResponse(response);\r\n        if (this.authService.isAdmin()) {\r\n          this.router.navigate(['/admin/dashboard']);\r\n        } else if (this.authService.isMember()) {\r\n          this.router.navigate(['/membre/dashboard']);\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        // Handle login error\r\n      }\r\n    );\r\n  }\r\n  // username!: string;\r\n  // password!: string;\r\n  // role!: string;\r\n\r\n  // constructor(private http: HttpClient, private authService: AuthService , private router: Router ) {}\r\n  \r\n\r\n  // login() {\r\n  //   const credentials = {\r\n  //     username: this.username,\r\n  //     password: this.password,\r\n  //     role: this.role\r\n  //   };\r\n\r\n  //   this.authService.login(credentials).subscribe(\r\n  //     response => {\r\n  //       // Gérer la réponse de connexion réussie\r\n  //       console.log('Connexion réussie');\r\n  //       // Rediriger vers le tableau de bord approprié en fonction du rôle\r\n  //       this.redirectToDashboard(this.role);\r\n  //     },\r\n  //     error => {\r\n  //       // Gérer l'erreur de connexion\r\n  //       console.error('Erreur de connexion', error);\r\n  //     }\r\n  //   );\r\n  // }\r\n\r\n  // redirectToDashboard(role: string) {\r\n  //   // Rediriger vers le tableau de bord approprié en fonction du rôle\r\n  //   let dashboardUrl = '';\r\n  \r\n  //   switch (role) {\r\n  //     case 'admin':\r\n  //       dashboardUrl = '/admin/dashboard';\r\n  //       break;\r\n  //     case 'directeur':\r\n  //       dashboardUrl = '/directeur/dashboard';\r\n  //       break;\r\n  //     case 'membre':\r\n  //       dashboardUrl = '/membre/dashboard';\r\n  //       break;\r\n  //     case 'responsable-marche':\r\n  //       dashboardUrl = '/responsable-marche/dashboard';\r\n  //       break;\r\n  //     case 'responsable-finance':\r\n  //       dashboardUrl = '/responsable-finance/dashboard';\r\n  //       break;\r\n  //     default:\r\n  //       // Redirection par défaut en cas de rôle non reconnu\r\n  //       dashboardUrl = '/login';\r\n  //       break;\r\n  //   }\r\n  \r\n  //   // Redirection vers le tableau de bord correspondant\r\n  //   this.router.navigate([dashboardUrl]);\r\n  // }\r\n}\r\n","<!-- <form (ngSubmit)=\"login()\">\r\n  <div>\r\n    <label>Email:</label>\r\n    <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" required>\r\n  </div>\r\n  <div>\r\n    <label>Password:</label>\r\n    <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" required>\r\n  </div>\r\n  <button type=\"submit\">Login</button>\r\n</form> -->\r\n\r\n<div class=\"login\">\r\n\r\n  <div class=\"login0ç\">\r\n    <header class=\"login__header\">\r\n      <h3>LOGIN</h3>\r\n    </header>\r\n  \r\n    <form (ngSubmit)=\"login()\" class=\"login__form\" >\r\n  \r\n      <div>\r\n        <label for=\"email\">Adresse email</label>\r\n        <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" placeholder=\"xyz@gmail.com\" required>\r\n      </div>\r\n  \r\n      <div>\r\n        <label for=\"password\">Mot de passe</label>\r\n        <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" placeholder=\"********\" required>\r\n      </div>\r\n  \r\n      <div>\r\n        <input class=\"button\" type=\"submit\" value=\"Connexion\">\r\n      </div>\r\n  \r\n    </form>\r\n  </div>\r\n\r\n</div>"],"mappings":";;;;AAIA,MAKaA,cAAc;EAMzBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEvEC,KAAKA,CAAA;IACH,IAAI,CAACF,WAAW,CAACE,KAAK,CAAC,IAAI,CAACC,KAAK,EAAE,IAAI,CAACC,QAAQ,CAAC,CAACC,SAAS,CACxDC,QAAa,IAAI;MAChB,IAAI,CAACN,WAAW,CAACO,mBAAmB,CAACD,QAAQ,CAAC;MAC9C,IAAI,IAAI,CAACN,WAAW,CAACQ,OAAO,EAAE,EAAE;QAC9B,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC;OAC3C,MAAM,IAAI,IAAI,CAACT,WAAW,CAACU,QAAQ,EAAE,EAAE;QACtC,IAAI,CAACT,MAAM,CAACQ,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC;;IAE/C,CAAC,EACAE,KAAK,IAAI;MACRC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB;IACF,CAAC,CACF;EACH;;;AAvBWb,cAAc,C;mBAAdA,cAAc,EAAAgB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;AAAdrB,cAAc,C;QAAdA,cAAc;EAAAsB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCG3BZ,EAAA,CAAAc,cAAA,aAAmB;MAITd,EAAA,CAAAe,MAAA,YAAK;MAAAf,EAAA,CAAAgB,YAAA,EAAK;MAGhBhB,EAAA,CAAAc,cAAA,cAAgD;MAA1Cd,EAAA,CAAAiB,UAAA,sBAAAC,iDAAA;QAAA,OAAYL,GAAA,CAAAzB,KAAA,EAAO;MAAA,EAAC;MAExBY,EAAA,CAAAc,cAAA,UAAK;MACgBd,EAAA,CAAAe,MAAA,oBAAa;MAAAf,EAAA,CAAAgB,YAAA,EAAQ;MACxChB,EAAA,CAAAc,cAAA,eAA0F;MAAtEd,EAAA,CAAAiB,UAAA,2BAAAE,uDAAAC,MAAA;QAAA,OAAAP,GAAA,CAAAxB,KAAA,GAAA+B,MAAA;MAAA,EAAmB;MAAvCpB,EAAA,CAAAgB,YAAA,EAA0F;MAG5FhB,EAAA,CAAAc,cAAA,WAAK;MACmBd,EAAA,CAAAe,MAAA,oBAAY;MAAAf,EAAA,CAAAgB,YAAA,EAAQ;MAC1ChB,EAAA,CAAAc,cAAA,gBAA8F;MAAvEd,EAAA,CAAAiB,UAAA,2BAAAI,wDAAAD,MAAA;QAAA,OAAAP,GAAA,CAAAvB,QAAA,GAAA8B,MAAA;MAAA,EAAsB;MAA7CpB,EAAA,CAAAgB,YAAA,EAA8F;MAGhGhB,EAAA,CAAAc,cAAA,WAAK;MACHd,EAAA,CAAAsB,SAAA,gBAAsD;MACxDtB,EAAA,CAAAgB,YAAA,EAAM;;;MAVgBhB,EAAA,CAAAuB,SAAA,GAAmB;MAAnBvB,EAAA,CAAAwB,UAAA,YAAAX,GAAA,CAAAxB,KAAA,CAAmB;MAKhBW,EAAA,CAAAuB,SAAA,GAAsB;MAAtBvB,EAAA,CAAAwB,UAAA,YAAAX,GAAA,CAAAvB,QAAA,CAAsB;;;;;;SDnBxCN,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}